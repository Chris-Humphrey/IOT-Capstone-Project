{"ast":null,"code":"import _objectSpread from \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { COL_ADD_PLANT, COL_REMOVE_PLANT, COL_DISPLAY_PLANT } from '../actions/types';\nconst Initial_State = {\n  collist: [],\n  dbCollection: []\n};\n\nlet wishlistReducer = (state = Initial_State, action) => {\n  switch (action.type) {\n    case WISH_ADD_PLANT:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        wishlist: state.wishlist.concat(action.payload)\n      });\n\n    case WISH_DISPLAY_PLANT:\n      console.log(\"wish list reducer display case\");\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        dbWishlist: state.dbWishlist.concat(action.payload)\n      });\n\n    case WISH_REMOVE_PLANT:\n      console.log(\"inside wishlist remove reducer \".concat(action.payload));\n      let newWishlist = state.wishlist.filter(plant => {\n        return plant.name !== action.payload.name;\n      });\n      return _objectSpread({}, state, {\n        wishlist: newWishlist\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default wishlistReducer;","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/reducers/collectionReducer.js"],"names":["COL_ADD_PLANT","COL_REMOVE_PLANT","COL_DISPLAY_PLANT","Initial_State","collist","dbCollection","wishlistReducer","state","action","type","WISH_ADD_PLANT","console","log","payload","wishlist","concat","WISH_DISPLAY_PLANT","dbWishlist","WISH_REMOVE_PLANT","newWishlist","filter","plant","name"],"mappings":";AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,iBAAzC,QAAiE,kBAAjE;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAAtB;;AAKA,IAAIC,eAAe,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,cAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,OAAnB;AACA,+BACON,KADP;AAEIO,QAAAA,QAAQ,EAAEP,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsBP,MAAM,CAACK,OAA7B;AAFd;;AAIJ,SAAKG,kBAAL;AACIL,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,OAAnB;AACA,+BACON,KADP;AAEIU,QAAAA,UAAU,EAAGV,KAAK,CAACU,UAAN,CAAiBF,MAAjB,CAAwBP,MAAM,CAACK,OAA/B;AAFjB;;AAIJ,SAAKK,iBAAL;AACIP,MAAAA,OAAO,CAACC,GAAR,0CAA8CJ,MAAM,CAACK,OAArD;AACA,UAAIM,WAAW,GAAGZ,KAAK,CAACO,QAAN,CAAeM,MAAf,CAAuBC,KAAD,IAAS;AACjD,eAAOA,KAAK,CAACC,IAAN,KAAed,MAAM,CAACK,OAAP,CAAeS,IAArC;AACC,OAFiB,CAAlB;AAGJ,+BACOf,KADP;AAEIO,QAAAA,QAAQ,EAAEK;AAFd;;AAIJ;AACI,aAAOZ,KAAP;AAxBJ;AA0BH,CA3BD;;AA6BA,eAAeD,eAAf","sourcesContent":["import {COL_ADD_PLANT, COL_REMOVE_PLANT, COL_DISPLAY_PLANT} from '../actions/types';\n\nconst Initial_State = {\n    collist: [],\n    dbCollection: []\n}\n\nlet wishlistReducer = (state = Initial_State, action) => {\n    switch (action.type){\n        case WISH_ADD_PLANT:\n            console.log(action.payload)\n            return {\n                ...state,\n                wishlist: state.wishlist.concat(action.payload)\n            }\n        case WISH_DISPLAY_PLANT: \n            console.log(`wish list reducer display case`)\n            console.log(action.payload)\n            return {\n                ...state,\n                dbWishlist : state.dbWishlist.concat(action.payload)\n            }\n        case WISH_REMOVE_PLANT: \n            console.log(`inside wishlist remove reducer ${action.payload}`)\n            let newWishlist = state.wishlist.filter((plant)=>{\n            return plant.name !== action.payload.name\n            })\n        return  {\n            ...state,\n            wishlist: newWishlist\n        }\n    default:\n        return state;\n    }\n}\n\nexport default wishlistReducer;"]},"metadata":{},"sourceType":"module"}