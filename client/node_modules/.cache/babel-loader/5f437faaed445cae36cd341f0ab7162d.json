{"ast":null,"code":"var _jsxFileName = \"/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Weather.js\";\nimport React from 'react';\nimport { Card, Input, Image, Icon } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport addZipCode from '../actions/addZipCode';\nlet apiAddress = \"api.openweathermap.org/data/2.5/weather?zip=\";\nlet imperial = \"&units=imperial\";\nlet apiKey = \"&appid=dce850dc2414fe1c6616f016a88fcf20\";\nconst WeatherAPI = \"http://api.openweathermap.org/data/2.5/weather?zip=77007&units=imperial&appid=dce850dc2414fe1c6616f016a88fcf20\";\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onZipHandler = e => {\n      if (e.charCode === 13) {\n        console.log('clicked');\n        this.setState({\n          zipcode: e.target.value\n        });\n      }\n    };\n\n    this.state = {\n      forecast: [],\n      tempMain: {},\n      zipcode: 0\n    };\n  } // componentWillMount() {\n  //     let zipcode = this.refs.zipcode.value\n  //     let onZipHandler = (e) => {\n  //         e.preventDefault();\n  //         this.setState({\n  //             zipcode: zipcode\n  //         })\n  //     }\n  // }\n\n\n  componentDidMount() {\n    // fetch(apiAddress + '77007' + imperial + apiKey)\n    fetch(WeatherAPI).then(response => {\n      return response.json();\n    }).then(data => {\n      // console.log(data)\n      this.setState({\n        forecast: data.weather[0],\n        tempMain: data.main\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.zipcode);\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Image, {\n      variant: \"top\",\n      src: \"../layout/images/sunny.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.forecast.description), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Location:\"), React.createElement(Input, {\n      placeholder: \"Search...\",\n      onKeyPress: this.onZipHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    forecast: state.weatherReducer.forecast,\n    tempMain: state.weatherReducer.tempMain\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onaddZipCode: zipcode => dispatch(addZipCode(zipcode))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Weather.js"],"names":["React","Card","Input","Image","Icon","connect","addZipCode","apiAddress","imperial","apiKey","WeatherAPI","Weather","Component","constructor","props","onZipHandler","e","charCode","console","log","setState","zipcode","target","value","state","forecast","tempMain","componentDidMount","fetch","then","response","json","data","weather","main","render","description","bind","mapStateToProps","weatherReducer","mapDispatchToProps","dispatch","onaddZipCode"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Card, Input, Image, Icon } from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport addZipCode from '../actions/addZipCode';\n\nlet apiAddress=\"api.openweathermap.org/data/2.5/weather?zip=\";\nlet imperial=\"&units=imperial\";\nlet apiKey=\"&appid=dce850dc2414fe1c6616f016a88fcf20\";\n\nconst WeatherAPI = \"http://api.openweathermap.org/data/2.5/weather?zip=77007&units=imperial&appid=dce850dc2414fe1c6616f016a88fcf20\";\n\n\nclass Weather extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            forecast: [],\n            tempMain: {},\n            zipcode: 0\n        }\n    }\n\n    // componentWillMount() {\n    //     let zipcode = this.refs.zipcode.value\n    //     let onZipHandler = (e) => {\n    //         e.preventDefault();\n    //         this.setState({\n    //             zipcode: zipcode\n    //         })\n    //     }\n    // }\n\n    onZipHandler = (e) => {\n        \n        if(e.charCode === 13){\n                        console.log('clicked')\n            this.setState({\n                zipcode: e.target.value        \n            })\n\n        }\n    }  \n\n    componentDidMount(){\n        // fetch(apiAddress + '77007' + imperial + apiKey)\n        fetch(WeatherAPI)\n        .then((response) => {\n            return response.json()\n        })\n        .then((data) => {\n            // console.log(data)\n            this.setState({\n                forecast: data.weather[0],\n                tempMain: data.main\n            })\n        })\n    }\n\n    \n\n    render() {\n        console.log(this.state.zipcode)\n        return (\n            <>\n                <Card fluid>\n                    <Card.Content>\n                        <Image variant=\"top\" src=\"../layout/images/sunny.png\" />\n                        <Card.Header>{this.props.forecast.description}</Card.Header>\n                        <Card.Description>Location:</Card.Description>\n                        <Input placeholder='Search...' onKeyPress={this.onZipHandler.bind(this)}\n                        />\n                    </Card.Content>\n                </Card>\n            </>\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return ({\n        forecast: state.weatherReducer.forecast,\n        tempMain: state.weatherReducer.tempMain\n    })\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onaddZipCode: zipcode => dispatch(addZipCode(zipcode))\n    }\n}\n\n\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Weather);\n"]},"metadata":{},"sourceType":"module"}