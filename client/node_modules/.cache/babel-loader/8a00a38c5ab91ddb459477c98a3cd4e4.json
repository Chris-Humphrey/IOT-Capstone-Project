{"ast":null,"code":"import _objectSpread from \"/Users/tarekalbeb/Desktop/untitled folder/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT } from '../actions/types';\nconst Initial_State = {\n  wishlist: [],\n  user_id: localStorage.user_id\n};\n\nlet wishlistReducer = (state = Initial_State, action) => {\n  switch (action.type) {\n    case WISH_ADD_PLANT:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        wishlist: state.wishlist.concat({\n          plant: action.payload\n        })\n      });\n\n    case WISH_DISPLAY_PLANT:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        wishlist: state.wishlist.concat({\n          plant: action.payload\n        })\n      });\n\n    case WISH_REMOVE_PLANT:\n      console.log(\"inside wishlist remove reducer \".concat(action.payload));\n      let newWishlist = state.wishlist.filter(plant => {\n        return plant.name !== action.payload.name;\n      });\n      return _objectSpread({}, state, {\n        wishlist: newWishlist\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default wishlistReducer;","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/reducers/wishlistReducer.js"],"names":["WISH_ADD_PLANT","WISH_REMOVE_PLANT","WISH_DISPLAY_PLANT","Initial_State","wishlist","user_id","localStorage","wishlistReducer","state","action","type","console","log","payload","concat","plant","newWishlist","filter","name"],"mappings":";AAAA,SAAQA,cAAR,EAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAoE,kBAApE;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,OAAO,EAAGC,YAAY,CAACD;AAFL,CAAtB;;AAKA,IAAIE,eAAe,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,cAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BACOL,KADP;AAEIJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeU,MAAf,CAAsB;AAC5BC,UAAAA,KAAK,EAAEN,MAAM,CAACI;AADc,SAAtB;AAFd;;AAMJ,SAAKX,kBAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BACOL,KADP;AAEIJ,QAAAA,QAAQ,EAAGI,KAAK,CAACJ,QAAN,CAAeU,MAAf,CAAsB;AAC7BC,UAAAA,KAAK,EAAEN,MAAM,CAACI;AADe,SAAtB;AAFf;;AAMJ,SAAKZ,iBAAL;AACIU,MAAAA,OAAO,CAACC,GAAR,0CAA8CH,MAAM,CAACI,OAArD;AACA,UAAIG,WAAW,GAAGR,KAAK,CAACJ,QAAN,CAAea,MAAf,CAAuBF,KAAD,IAAS;AACjD,eAAOA,KAAK,CAACG,IAAN,KAAeT,MAAM,CAACI,OAAP,CAAeK,IAArC;AACC,OAFiB,CAAlB;AAGJ,+BACOV,KADP;AAEIJ,QAAAA,QAAQ,EAAEY;AAFd;;AAIJ;AACI,aAAOR,KAAP;AA3BJ;AA6BH,CA9BD;;AAgCA,eAAeD,eAAf","sourcesContent":["import {WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT} from '../actions/types';\n\nconst Initial_State = {\n    wishlist: [],\n    user_id : localStorage.user_id\n}\n\nlet wishlistReducer = (state = Initial_State, action) => {\n    switch (action.type){\n        case WISH_ADD_PLANT:\n            console.log(action.payload)\n            return {\n                ...state,\n                wishlist: state.wishlist.concat({\n                    plant: action.payload\n                })\n            }\n        case WISH_DISPLAY_PLANT: \n            console.log(action.payload)\n            return {\n                ...state,\n                wishlist : state.wishlist.concat({\n                    plant: action.payload\n                })\n            }\n        case WISH_REMOVE_PLANT: \n            console.log(`inside wishlist remove reducer ${action.payload}`)\n            let newWishlist = state.wishlist.filter((plant)=>{\n            return plant.name !== action.payload.name\n            })\n        return  {\n            ...state,\n            wishlist: newWishlist\n        }\n    default:\n        return state;\n    }\n}\n\nexport default wishlistReducer;"]},"metadata":{},"sourceType":"module"}