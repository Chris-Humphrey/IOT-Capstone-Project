{"ast":null,"code":"var _jsxFileName = \"/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Wishlist.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux';\nimport { addToWishlistDb, displayWishlistDb } from '../actions';\nlet jsonPlants = jsonData.plants;\n\nclass Wishlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      wishlist: []\n    };\n    this.addToWishlist = this.addToWishlist.bind(this);\n    this.displayWishlist = this.displayWishlist.bind(this);\n  }\n\n  addToWishlist(e) {\n    e.preventDefault();\n    console.log(\"event happened \".concat(e));\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value;\n    console.log(plantName);\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          this.props.addToWishlistDb(plant);\n          this.displayWishlist();\n          console.log(\"added \".concat(plant.name, \" to wishlist db\"));\n        }\n      }\n    } else {\n      console.log('fill blank');\n    }\n  }\n\n  displayWishlist() {\n    this.props.displayWishlistDb();\n  }\n\n  componentDidMount() {\n    this.displayWishlist();\n  }\n\n  render() {\n    console.log(this.props.wishlist);\n    console.log(this.props.dbWishlist);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Plants API\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.plants.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, item.name))), React.createElement(\"form\", {\n      onSubmit: this.addToWishlist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: \"plantName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add Item\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"wishlist\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.dbWishlist.map(item => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" \", item.plant_name, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Remove \"));\n    }))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    wishlist: state.wishlistReducer.wishlist,\n    dbWishlist: state.wishlistReducer.dbWishlist\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addToWishlistDb: plant => dispatch(addToWishlistDb(plant)),\n    displayWishlistDb: () => dispatch(displayWishlistDb())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Wishlist.js"],"names":["React","jsonData","connect","addToWishlistDb","displayWishlistDb","jsonPlants","plants","Wishlist","Component","constructor","props","state","wishlist","addToWishlist","bind","displayWishlist","e","preventDefault","console","log","plantName","refs","value","i","length","plant","name","componentDidMount","render","dbWishlist","map","item","id","plant_name","mapStateToProps","wishlistReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\nimport {addToWishlistDb, displayWishlistDb} from '../actions'\n\nlet jsonPlants = jsonData.plants\nclass Wishlist extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        plants: jsonPlants,\n        wishlist: []\n      }\n      this.addToWishlist = this.addToWishlist.bind(this)\n      this.displayWishlist = this.displayWishlist.bind(this)\n\n    }\n\naddToWishlist(e){\n  e.preventDefault()\n  console.log(`event happened ${e}`)\n  let plants = this.state.plants;\n  let plantName = this.refs.plantName.value\n  console.log(plantName)\n  if (plantName !== ''){\n    for(let i=0; i<plants.length; i++){\n      let plant = plants[i];\n      if (plantName === plant.name){\n          this.props.addToWishlistDb(plant)\n          this.displayWishlist()\n          console.log(`added ${plant.name} to wishlist db`)\n        }\n      }\n    }\n    else{\n      console.log('fill blank')\n    }\n  }     \n\n  displayWishlist(){\n    this.props.displayWishlistDb()\n  }\n\n  componentDidMount(){\n      this.displayWishlist()\n    }\n\n\nrender() {\n  console.log(this.props.wishlist)\n  console.log(this.props.dbWishlist)\n    return (\n        <div>\n            <section>\n             <h2>Plants API</h2>\n             <ul>\n            {this.state.plants.map(item => (\n                <li key={item.id}>{item.name}</li> \n              ))}\n            </ul>\n            <form onSubmit={this.addToWishlist}>\n              <input\n                type=\"text\"\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref=\"plantName\"\n              />\n              <button type=\"submit\">\n                Add Item\n              </button>\n            </form>\n            </section><hr/>\n\n            <section className=\"section\">\n            <h2>wishlist</h2>\n            <ul>\n              {this.props.dbWishlist.map((item) => {\n                return <li key={item.id}> {item.plant_name}\n                  <button> Remove </button> \n                  {/* <img src={item.image_url}/> */}\n              </li>\n              })}\n                \n            </ul>\n          </section>\n        </div>\n    )}\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n      wishlist: state.wishlistReducer.wishlist, \n      dbWishlist : state.wishlistReducer.dbWishlist\n    })\n  }\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n      addToWishlistDb : (plant) => dispatch(addToWishlistDb(plant)),\n      displayWishlistDb: () => dispatch(displayWishlistDb())\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);"]},"metadata":{},"sourceType":"module"}