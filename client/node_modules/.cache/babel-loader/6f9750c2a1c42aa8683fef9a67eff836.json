{"ast":null,"code":"var _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/auth/Signup.js\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport { Field, reduxForm, Label } from 'redux-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport '../login.css';\nimport { Button } from 'semantic-ui-react';\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formProps => {\n      this.props.signup(formProps, () => {\n        this.props.history.push('/dashboard');\n      });\n    };\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"div\", {\n      id: \"grass\",\n      style: {\n        textAlign: 'center',\n        paddingTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: \"input\",\n      autoComplete: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      component: \"input\",\n      autoComplete: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      component: \"input\",\n      autoComplete: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.errorMessage), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign Up\"))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    errorMessage: state.auth.errorMessage\n  };\n};\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'signup'\n}))(Signup);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/auth/Signup.js"],"names":["React","compose","Field","reduxForm","Label","connect","actions","Button","Signup","Component","onSubmit","formProps","props","signup","history","push","render","handleSubmit","textAlign","paddingTop","display","errorMessage","mapStateToProps","state","auth","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAO,cAAP;AACA,SACIC,MADJ,QAEO,mBAFP;;AAKA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEjCC,QAFiC,GAErBC,SAAD,IAAe;AACtB,WAAKC,KAAL,CAAWC,MAAX,CAAkBF,SAAlB,EAA6B,MAAM;AAC/B,aAAKC,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAFD;AAGH,KANgC;AAAA;;AAQjCC,EAAAA,MAAM,GAAG;AAAA,UAEGC,YAFH,GAEoB,KAAKL,KAFzB,CAEGK,YAFH;AAGL,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAEH,YAAY,CAAC,KAAKP,QAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAC,OAHd;AAII,MAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAC,OAHd;AAII,MAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,SAAS,EAAC,OAHd;AAII,MAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKE,KAAL,CAAWS,YAAjB,CA5BJ,EA6BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA7BJ,CADJ,CADJ,CADJ;AAqCH;;AAhDgC;;AAmDrC,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,YAAY,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADtB,GAAP;AAGH,CAJD;;AAOA,eAAepB,OAAO,CAClBI,OAAO,CAACiB,eAAD,EAAkBhB,OAAlB,CADW,EAElBH,SAAS,CAAC;AAACsB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAFS,CAAP,CAGbjB,MAHa,CAAf","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { Field, reduxForm, Label } from 'redux-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport '../login.css';\nimport {\n    Button\n} from 'semantic-ui-react';\n\n\nclass Signup extends React.Component {\n\n    onSubmit = (formProps) => {\n        this.props.signup(formProps, () => {\n            this.props.history.push('/dashboard')\n        })\n    }\n    \n    render() {\n\n        const { handleSubmit } = this.props;\n        return (\n            <div id='grass' style={{textAlign: 'center', paddingTop: '30px'}}>\n                <div style={{display: 'inline-block'}}>\n                    <form onSubmit={handleSubmit(this.onSubmit)}>\n                        <fieldset>\n                            <Label>Username</Label>\n                            <Field\n                                name='username'\n                                type='text'\n                                component='input'\n                                autoComplete='none' \n                            />\n                        </fieldset>\n                        <fieldset>\n                            <Label>Email</Label>\n                            <Field\n                                name='email'\n                                type='text'\n                                component='input'\n                                autoComplete='none' \n                            />\n                        </fieldset>\n                        <fieldset>\n                            <Label>Password</Label>\n                            <Field\n                                name='password'\n                                type='password'\n                                component='input'\n                                autoComplete='none'\n                            />\n                        </fieldset>\n                        <div>{this.props.errorMessage}</div>\n                        <Button>Sign Up</Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        errorMessage: state.auth.errorMessage\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, actions),\n    reduxForm({form: 'signup'})\n)(Signup)\n\n"]},"metadata":{},"sourceType":"module"}