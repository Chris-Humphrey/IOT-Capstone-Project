{"ast":null,"code":"import _objectSpread from \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT } from '../actions/types';\nconst Initial_State = {\n  collection: [],\n  dbCollection: []\n};\n\nlet collectionReducer = (state = Initial_State, action) => {\n  switch (action.type) {\n    case COL_ADD_PLANT:\n      return _objectSpread({}, state, {\n        collection: state.collection.concat(action.payload)\n      });\n\n    case DISPLAY_COL_ITEMS:\n      return _objectSpread({}, state, {\n        dbcollection: state.dbCollection.concat(action.payload)\n      });\n\n    case COL_REMOVE_PLANT:\n      let newCollection = state.collection.filter(plant => {\n        return plant.name !== action.payload.name;\n      });\n      return _objectSpread({}, state, {\n        collection: newCollection\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default collectionReducer;","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/reducers/collectionReducer.js"],"names":["WISH_ADD_PLANT","WISH_REMOVE_PLANT","WISH_DISPLAY_PLANT","Initial_State","collection","dbCollection","collectionReducer","state","action","type","COL_ADD_PLANT","concat","payload","DISPLAY_COL_ITEMS","dbcollection","COL_REMOVE_PLANT","newCollection","filter","plant","name"],"mappings":";AAAA,SAAQA,cAAR,EAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAoE,kBAApE;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,EADM;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAAtB;;AAKA,IAAIC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,aAAL;AACI,+BACOH,KADP;AAEIH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,CAAiBO,MAAjB,CAAwBH,MAAM,CAACI,OAA/B;AAFhB;;AAIJ,SAAKC,iBAAL;AACI,+BACON,KADP;AAEIO,QAAAA,YAAY,EAAGP,KAAK,CAACF,YAAN,CAAmBM,MAAnB,CAA0BH,MAAM,CAACI,OAAjC;AAFnB;;AAIJ,SAAKG,gBAAL;AACI,UAAIC,aAAa,GAAGT,KAAK,CAACH,UAAN,CAAiBa,MAAjB,CAAyBC,KAAD,IAAS;AACrD,eAAOA,KAAK,CAACC,IAAN,KAAeX,MAAM,CAACI,OAAP,CAAeO,IAArC;AACC,OAFmB,CAApB;AAGJ,+BACOZ,KADP;AAEIH,QAAAA,UAAU,EAAEY;AAFhB;;AAIJ;AACI,aAAOT,KAAP;AApBJ;AAsBH,CAvBD;;AAyBA,eAAeD,iBAAf","sourcesContent":["import {WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT} from '../actions/types';\n\nconst Initial_State = {\n    collection: [],\n    dbCollection: []\n}\n\nlet collectionReducer = (state = Initial_State, action) => {\n    switch (action.type){\n        case COL_ADD_PLANT:\n            return {\n                ...state,\n                collection: state.collection.concat(action.payload)\n            }\n        case DISPLAY_COL_ITEMS: \n            return {\n                ...state,\n                dbcollection : state.dbCollection.concat(action.payload)\n            }\n        case COL_REMOVE_PLANT: \n            let newCollection = state.collection.filter((plant)=>{\n            return plant.name !== action.payload.name\n            })\n        return  {\n            ...state,\n            collection: newCollection\n        }\n    default:\n        return state;\n    }\n}\n\nexport default collectionReducer;"]},"metadata":{},"sourceType":"module"}