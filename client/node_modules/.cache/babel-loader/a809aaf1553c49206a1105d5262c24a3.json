{"ast":null,"code":"var _jsxFileName = \"/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Wishlist.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux';\nimport { addToWishlistDb } from '../actions';\nlet jsonPlants = jsonData.plants;\n\nclass Wishlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      wishlist: []\n    };\n  }\n\n  addToWishlist(e) {\n    e.preventDefault();\n    alert('form submitted');\n    console.log(\"event happened \".concat(e));\n    console.log(this.refs.plantName.value);\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value;\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          this.props.addToWishlistDb(plant);\n          console.log(\"added to wishlist db\");\n        }\n      }\n    } else {\n      console.log('fill blank');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Plants API\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.plants.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item.name))), React.createElement(\"form\", {\n      onSubmit: this.addToWishlist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: \"plantName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add Item\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Collection\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Remove\")))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    wishlist: state.wishlistReducer.wishlist\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addToWishlistDb: plant => dispatch(addToWishlistDb(plant))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Wishlist.js"],"names":["React","jsonData","connect","addToWishlistDb","jsonPlants","plants","Wishlist","Component","constructor","props","state","wishlist","addToWishlist","e","preventDefault","alert","console","log","refs","plantName","value","i","length","plant","name","render","map","item","id","mapStateToProps","wishlistReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\nimport {addToWishlistDb} from '../actions'\n\nlet jsonPlants = jsonData.plants\nclass Wishlist extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        plants: jsonPlants,\n        wishlist: []\n      }\n    }\n\n    addToWishlist(e){\n      e.preventDefault()\n  alert('form submitted')\n  console.log(`event happened ${e}`)\n  console.log(this.refs.plantName.value)\n  let plants = this.state.plants;\n  let plantName = this.refs.plantName.value\n  if (plantName !== ''){\n    for(let i=0; i<plants.length; i++){\n      let plant = plants[i];\n      if (plantName === plant.name){\n          this.props.addToWishlistDb(plant)\n          console.log(`added to wishlist db`)\n        }\n      }\n    }\n    else{\n      console.log('fill blank')\n    }\n  }     \n\n\nrender() {\n    return (\n        <div>\n            <section>\n             <h2>Plants API</h2>\n             <ul>\n            {this.state.plants.map(item => (\n                <li key={item.id}>{item.name}</li> \n              ))}\n            </ul>\n            <form onSubmit={this.addToWishlist}>\n              <input\n                type=\"text\"\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref=\"plantName\"\n              />\n              <button type=\"submit\">\n                Add Item\n              </button>\n            </form>\n            </section><hr/>\n\n            <section className=\"section\">\n            <h2>Collection</h2>\n            <ul>\n                <li>\n                  <button>\n                    Remove\n                  </button> \n                </li>\n            </ul>\n          </section>\n        </div>\n    )}\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n      wishlist: state.wishlistReducer.wishlist, \n    })\n  }\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n      addToWishlistDb : (plant) => dispatch(addToWishlistDb(plant))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);"]},"metadata":{},"sourceType":"module"}