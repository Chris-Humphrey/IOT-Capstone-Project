{"ast":null,"code":"import _objectSpread from \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Collection.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport WeatherComponent from './Weather';\nimport { connect } from 'react-redux';\nimport { addToCollectionDb, displayCollectionDb, removeFromCollectionDb } from '../actions/';\nimport { Button, // Container,\n// Divider,\n// Grid,\n// Header,\n// Icon,\nImage, Label, // List,\n// Menu,\n// Responsive,\n// Segment,\n// Sidebar,\n// Visibility,\nInput, Card, Form, Header // Search\n} from 'semantic-ui-react';\nimport '../components/dashboard.css';\nlet sensorData = 'https://io.adafruit.com/api/feeds?x-aio-key=1de8b4e601e94f9a96f29c07626470c2';\nlet jsonPlants = jsonData.plants;\n\nclass Collection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: [],\n      remove: {},\n      sensor: 0\n    };\n    this.addToCollection = this.addToCollection.bind(this);\n    this.displayCollection = this.displayCollection.bind(this);\n    this.removeFromCollection = this.removeFromCollection.bind(this);\n  }\n\n  async addToCollection(e) {\n    e.preventDefault();\n    let plants = this.state.plants;\n    let plantName = this.plantNameSearchTerm.value;\n    console.log(plantName);\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          await this.props.addToCollectionDb(plant);\n          this.displayCollection();\n          console.log('vero: after call');\n          this.setState({\n            collection: this.state.collection.concat(plant)\n          });\n          console.log(\"added \".concat(plantName, \" to collection db\"));\n          console.log(\"added to collection db\");\n        }\n      }\n    } else {\n      alert('fill in blanks');\n    }\n  }\n\n  displayCollection() {\n    this.props.displayCollectionDb();\n  }\n\n  async removeFromCollection(e, plants) {\n    e.preventDefault();\n    console.log(\"remove plant \".concat(plants));\n    await this.props.removeFromCollectionDb(plants);\n    this.setState({\n      remove: plants\n    });\n  }\n\n  componentDidMount() {\n    this.displayCollection();\n    setInterval(() => {\n      this.sensorUpdate();\n    }, 5000);\n  }\n\n  sensorUpdate() {\n    fetch(sensorData).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState(_objectSpread({}, this.state, {\n        sensor: data[0].last_value\n      }));\n    }).catch(error => {\n      console.log('error', error);\n    });\n  } // componentDidUpdate(prevProps){\n  //   if(this.props.dbWishlist !== prevProps.dbWishlist){\n  //     this.addToWishlist();\n  //   }\n  // }\n\n\n  render() {\n    console.log('collection DB props');\n    console.log(this.state.sensor);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"fluid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(WeatherComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui grid center aligned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Search Plants\"), React.createElement(Form, {\n      onSubmit: this.addToCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        paddingRight: '20px'\n      },\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: input => this.plantNameSearchTerm = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Add To Collection\")))), React.createElement(Card.Group, {\n      className: \"segment centered\",\n      id: \"cardback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.props.dbCollection.map(item => {\n      return React.createElement(Card, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Image, {\n        floated: \"right\",\n        src: item.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, item.plant_name)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, item.temperature_range, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), item.shade_tolerance), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Moisture:\", this.state.sensor <= 15 && React.createElement(Label, {\n        circular: true,\n        color: 'red',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.sensor) // <Image src=\"https://i.gifer.com/7Q0a.gif\" style={{width: \"100px\"}} floated=\"right\" rounded />\n      , this.state.sensor <= 35 && this.state.sensor >= 16 && React.createElement(Label, {\n        circular: true,\n        color: 'yellow',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.sensor) && React.createElement(Image, {\n        src: \"https://thumbs.gfycat.com/ChiefHeftyBasil-small.gif\",\n        style: {\n          width: \"100px\"\n        },\n        floated: \"right\",\n        rounded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), this.state.sensor <= 100 && this.state.sensor >= 36 && React.createElement(Label, {\n        circular: true,\n        color: 'green',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.sensor) && React.createElement(Image, {\n        src: \"https://thumbs.gfycat.com/ChiefHeftyBasil-small.gif\",\n        style: {\n          width: \"100px\"\n        },\n        floated: \"right\",\n        rounded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => this.removeFromCollection(e, {\n          item\n        }),\n        basic: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Remove from collection\"))));\n    }))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    collection: state.collectionReducer.collection,\n    dbCollection: state.collectionReducer.dbCollection,\n    zipcode: state.auth.zipcode\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)),\n    addToCollectionDb: plant => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: () => dispatch(displayCollectionDb())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Collection);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Collection.js"],"names":["React","jsonData","WeatherComponent","connect","addToCollectionDb","displayCollectionDb","removeFromCollectionDb","Button","Image","Label","Input","Card","Form","Header","sensorData","jsonPlants","plants","Collection","Component","constructor","props","state","plant","collection","remove","sensor","addToCollection","bind","displayCollection","removeFromCollection","e","preventDefault","plantName","plantNameSearchTerm","value","console","log","i","length","name","setState","concat","alert","componentDidMount","setInterval","sensorUpdate","fetch","then","response","json","data","last_value","catch","error","render","paddingRight","input","dbCollection","map","item","id","image_url","plant_name","temperature_range","shade_tolerance","width","mapStateToProps","collectionReducer","zipcode","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport WeatherComponent from './Weather';\nimport {connect} from 'react-redux';\nimport {addToCollectionDb, displayCollectionDb, removeFromCollectionDb} from '../actions/';\nimport {\n    Button,\n    // Container,\n    // Divider,\n    // Grid,\n    // Header,\n    // Icon,\n    Image,\n    Label,\n    // List,\n    // Menu,\n    // Responsive,\n    // Segment,\n    // Sidebar,\n    // Visibility,\n    Input,\n    Card,\n    Form,\n    Header\n    // Search\n  } from 'semantic-ui-react';\n  import '../components/dashboard.css';\n\n  let sensorData = 'https://io.adafruit.com/api/feeds?x-aio-key=1de8b4e601e94f9a96f29c07626470c2';\n\n\nlet jsonPlants = jsonData.plants\nclass Collection extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        plants: jsonPlants,\n        plant: [],\n        collection: [],\n        remove: {},\n        sensor: 0\n      }\n      this.addToCollection = this.addToCollection.bind(this)\n      this.displayCollection = this.displayCollection.bind(this)\n      this.removeFromCollection = this.removeFromCollection.bind(this)\n    }\n\n    async addToCollection(e){\n        e.preventDefault();\n        let plants = this.state.plants;\n        let plantName = this.plantNameSearchTerm.value;\n        console.log(plantName)\n        if (plantName !== ''){\n            for(let i=0; i<plants.length; i++){\n            let plant = plants[i];\n            if (plantName === plant.name){\n\n              await this.props.addToCollectionDb(plant)\n              this.displayCollection()\n\n              console.log('vero: after call')\n\n              this.setState({\n                collection: this.state.collection.concat(plant)\n              })\n              \n              console.log(`added ${plantName} to collection db`)\n              console.log(`added to collection db`)\n        }\n      }\n    }\n        else{\n        alert('fill in blanks')\n        }\n  }     \n\ndisplayCollection(){\n  this.props.displayCollectionDb()\n}\n\nasync removeFromCollection(e, plants){\n    e.preventDefault();\n    console.log(`remove plant ${plants}`)\n\n\n    await this.props.removeFromCollectionDb(plants)\n\n    this.setState({\n      remove: plants \n    })\n\n    \n}\n\ncomponentDidMount(){\n    this.displayCollection()\n    setInterval(() => {\n        this.sensorUpdate()\n    }, 5000);\n  }\n\nsensorUpdate() {\n    fetch(sensorData)\n    .then((response) => {\n        return response.json()\n    })\n    .then((data) => {\n        this.setState({\n            ...this.state,\n            sensor: data[0].last_value\n        })\n    })\n    .catch((error) => {\n        console.log('error', error)\n    })\n}\n\n// componentDidUpdate(prevProps){\n//   if(this.props.dbWishlist !== prevProps.dbWishlist){\n//     this.addToWishlist();\n//   }\n// }\n\nrender() {\n  console.log('collection DB props')\n  console.log(this.state.sensor)\n    return (\n        <>\n        <div className='fluid-container'>\n        <WeatherComponent />\n        <div id=\"searchbar\">\n          <div className=\"ui grid center aligned\">\n              <Header>Search Plants</Header>\n          <Form onSubmit={this.addToCollection}>\n              <input\n                type=\"text\"\n                style={{paddingRight: '20px'}}\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref={ input => this.plantNameSearchTerm = input}\n              />\n              <Button type=\"submit\">\n                Add To Collection\n              </Button>\n            </Form>\n            </div>\n            </div>\n\n      <Card.Group className=\"segment centered\" id=\"cardback\">\n          {this.props.dbCollection.map((item) => {\n            return (\n                <Card key={item.id}>\n                <Card.Content>\n                  <Image floated='right' src={item.image_url} />\n                  <Card.Header>{item.plant_name}</Card.Header>\n                  </Card.Content>\n                <Card.Content>\n                    <Card.Description>\n                        {item.temperature_range}<br/>\n                        {item.shade_tolerance}\n                    </Card.Description><br/>\n                    <Card.Description>\n                    Moisture:\n                    { (this.state.sensor <= 15) &&\n                    <Label circular color={'red'}>\n                        {this.state.sensor}\n                    </Label> \n                    // <Image src=\"https://i.gifer.com/7Q0a.gif\" style={{width: \"100px\"}} floated=\"right\" rounded />\n                    }\n                    { (this.state.sensor <= 35 && this.state.sensor >= 16) &&\n                    <Label circular color={'yellow'}>\n                        {this.state.sensor}\n                    </Label> &&\n                    <Image src=\"https://thumbs.gfycat.com/ChiefHeftyBasil-small.gif\" style={{width: \"100px\"}} floated=\"right\" rounded />\n                    }\n                    { (this.state.sensor <= 100 && this.state.sensor >= 36) &&\n                    <Label circular color={'green'}>\n                        {this.state.sensor}\n                    </Label> &&\n                    <Image src=\"https://thumbs.gfycat.com/ChiefHeftyBasil-small.gif\" style={{width: \"100px\"}} floated=\"right\" rounded />\n                    }\n\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className='ui two buttons'>\n                    <Button onClick={(e)=> this.removeFromCollection(e, {item})} \n                        basic color='red'>\n                      Remove from collection\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n            )\n          }\n          )}\n        </Card.Group>\n  </div>\n  </>\n\n    )}\n        }\n\nlet mapStateToProps = (state) => {\n    return ({\n      collection: state.collectionReducer.collection, \n      dbCollection : state.collectionReducer.dbCollection,\n      zipcode: state.auth.zipcode\n    })\n  }\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)), \n        addToCollectionDb: (plant) => dispatch(addToCollectionDb(plant)),\n        displayCollectionDb: () => dispatch(displayCollectionDb())\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Collection);"]},"metadata":{},"sourceType":"module"}