{"ast":null,"code":"import { AUTH_USER, AUTH_ERROR, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT, WISH_ADD_PLANT, WISH_DISPLAY_PLANT } from './types';\nimport axios from 'axios'; // REFACTORING SIGNUP\n\nlet decodeToken = token => {\n  let split_token = token.split('.');\n  let token_payload = split_token[1];\n  let decoded_token_string = atob(token_payload);\n  let decoded_token = JSON.parse(decoded_token_string);\n  localStorage.setItem('user_id', decoded_token.sub);\n  localStorage.setItem('user_name', decoded_token.user_name);\n  console.log(\"local storage user ID: \".concat(localStorage.user_id));\n  console.log(\"local Storage user name: \".concat(localStorage.user_name));\n};\n\nexport const signup = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signup', formProps);\n    console.log(response); //dispatch\n\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'That email is already in use...'\n    });\n  }\n};\nexport const signin = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signin', formProps);\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'The email or password is incorrect...'\n    });\n  }\n};\nexport const signout = () => {\n  // localStorage.removeItem('token')\n  // localStorage.removeItem('user_id')\n  // localStorage.removeItem('user_name')\n  localStorage.clear();\n  return {\n    type: AUTH_USER,\n    payload: ''\n  };\n}; //Add/remove from collection:\n\nexport const addToCollectionDb = plant => async dispatch => {\n  // try{\n  // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n  let response = await axios.post('/colAdd', {\n    plant_id: plant.id,\n    user_id: localStorage.user_id\n  });\n  console.log(\"add to collection axios response: \".concat(response)); //dispatch\n\n  dispatch({\n    type: COL_ADD_PLANT,\n    payload: plant\n  });\n  localStorage.setItem('plant_id', response.data.plant_id);\n  console.log(\"after setItem localstorage \".concat(response.data.plant_id)); // }\n  // catch(e){\n  //     dispatch({type: COL_ADD_PLANT, payload: 'That plant is already in collection...'})\n  // }\n};\nexport const displayCollectionDb = () => async dispatch => {\n  let response = await axios.post('/collection', {\n    user_id: localStorage.user_id\n  });\n  dispatch({\n    type: DISPLAY_COL_ITEMS,\n    payload: response\n  });\n};\nexport const removeFromCollectionDb = plants => async dispatch => {\n  let response = await axios.post('/colRemove', {\n    user_id: localStorage.user_id,\n    plant_id: plants.plant_id\n  });\n  console.log(\"\".concat(plants.plant_id));\n  dispatch({\n    type: COL_REMOVE_PLANT,\n    payload: response.item\n  }); // localStorage.removeItem('plant_id')\n};\nexport const addToWishlistDb = plant => async dispatch => {\n  let response = await axios.post('/wishAdd', {\n    user_id: localStorage.user_id,\n    plant_name: plant.name,\n    plant_id: plant.id,\n    moisture: plant.moisture,\n    temperature_range: plant.temperature_range,\n    shade_tolerance: plant.shade_tolerance,\n    image_url: plant.image_url\n  });\n  console.log(\"payload plant \".concat(plant.name, \" temperature range \").concat(plant.temperature_range));\n  dispatch({\n    type: WISH_ADD_PLANT,\n    payload: plant\n  });\n};\nexport const displayWishlistDb = () => async dispatch => {\n  let response = await axios.post('/wishlist', {\n    user_id: localStorage.user_id\n  });\n  console.log('display response');\n  console.log(response);\n  dispatch({\n    type: WISH_DISPLAY_PLANT,\n    payload: response.data\n  });\n};\nexport const removeFromWishlistDb = plant => async dispatch => {\n  let plant_id = plant.id;\n  let user_id = localStorage.user_id;\n  let response = await axios.post('/wishRemove', {\n    user_id,\n    plant_id\n  });\n  console.log(\"remove from wishlist action\");\n  console.log(plant);\n  console.log(response);\n  dispatch({\n    type: WISH_REMOVE_PLANT,\n    payload: response\n  });\n};","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/actions/index.js"],"names":["AUTH_USER","AUTH_ERROR","COL_ADD_PLANT","DISPLAY_COL_ITEMS","COL_REMOVE_PLANT","WISH_ADD_PLANT","WISH_DISPLAY_PLANT","axios","decodeToken","token","split_token","split","token_payload","decoded_token_string","atob","decoded_token","JSON","parse","localStorage","setItem","sub","user_name","console","log","user_id","signup","formProps","callback","dispatch","response","post","type","payload","data","e","signin","signout","clear","addToCollectionDb","plant","plant_id","id","displayCollectionDb","removeFromCollectionDb","plants","item","addToWishlistDb","plant_name","name","moisture","temperature_range","shade_tolerance","image_url","displayWishlistDb","removeFromWishlistDb","WISH_REMOVE_PLANT"],"mappings":"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","sourcesContent":["import { AUTH_USER, AUTH_ERROR, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT, WISH_ADD_PLANT, WISH_DISPLAY_PLANT} from './types';\nimport axios from 'axios';\n\n\n// REFACTORING SIGNUP\n\nlet decodeToken = (token)=>{\n    let split_token = token.split('.')\n    let token_payload = split_token[1];\n    let decoded_token_string = atob(token_payload);\n    let decoded_token = JSON.parse(decoded_token_string)\n    localStorage.setItem('user_id', decoded_token.sub);\n    localStorage.setItem('user_name', decoded_token.user_name)\n    console.log(`local storage user ID: ${localStorage.user_id}`)\n    console.log(`local Storage user name: ${localStorage.user_name}`)\n}\n\nexport const signup = (formProps, callback) => async dispatch =>{\n\n    try{\n        let response = await axios.post('/signup', formProps);\n\n        console.log(response)\n\n        //dispatch\n\n        dispatch({type: AUTH_USER, payload: response.data.token});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'That email is already in use...'})\n    }\n};\n\nexport const signin = (formProps, callback) => async dispatch => {\n\n    try {\n        let response = await axios.post('/signin', formProps);\n        \n        dispatch({type: AUTH_USER, payload: response.data.token});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'The email or password is incorrect...'})\n    }\n\n}\n\nexport const signout = () => {\n\n    // localStorage.removeItem('token')\n    // localStorage.removeItem('user_id')\n    // localStorage.removeItem('user_name')\n    localStorage.clear()\n    return {\n        type: AUTH_USER,\n        payload: ''\n    }\n}\n\n//Add/remove from collection:\nexport const addToCollectionDb = (plant) => async dispatch =>{\n\n    // try{\n        // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n        let response = await axios.post('/colAdd', \n        {plant_id : plant.id, user_id: localStorage.user_id})\n\n        console.log(`add to collection axios response: ${response}`)\n\n        //dispatch\n\n        dispatch({type: COL_ADD_PLANT, \n            payload: plant});\n\n        localStorage.setItem('plant_id', response.data.plant_id);\n        console.log(`after setItem localstorage ${response.data.plant_id}`)\n    // }\n    // catch(e){\n    //     dispatch({type: COL_ADD_PLANT, payload: 'That plant is already in collection...'})\n    // }\n};\n\nexport const displayCollectionDb = () => async dispatch => {\n    let response = await axios.post('/collection', {user_id: localStorage.user_id})\n    dispatch({type: DISPLAY_COL_ITEMS, \n        payload: response});\n}\n\nexport const removeFromCollectionDb = (plants) => async dispatch => {\n    \n    let response = await axios.post('/colRemove', {user_id: localStorage.user_id, plant_id: plants.plant_id})\n    console.log(`${plants.plant_id}`)\n    dispatch({type: COL_REMOVE_PLANT, payload: response.item})\n    // localStorage.removeItem('plant_id')\n}\n\nexport const addToWishlistDb = (plant) => async dispatch => {\n    let response = await axios.post('/wishAdd', \n    {user_id: localStorage.user_id, plant_name: plant.name, plant_id: plant.id, \n        moisture: plant.moisture, temperature_range: plant.temperature_range,\n        shade_tolerance: plant.shade_tolerance, image_url:plant.image_url\n    })\n    console.log(`payload plant ${plant.name} temperature range ${plant.temperature_range}`)\n    dispatch({type: WISH_ADD_PLANT, payload: plant})\n}\n\nexport const displayWishlistDb = () => async dispatch => {\n    let response = await axios.post('/wishlist', {user_id: localStorage.user_id})\n    console.log('display response')\n    console.log(response)\n    dispatch({ type: WISH_DISPLAY_PLANT, payload: response.data});\n}\n\nexport const removeFromWishlistDb = (plant) => async dispatch =>{\n    let plant_id = plant.id\n    let user_id = localStorage.user_id\n    let response = await axios.post('/wishRemove', {user_id, plant_id})\n    console.log(`remove from wishlist action`)\n    console.log(plant)\n    console.log(response)\n    dispatch({type: WISH_REMOVE_PLANT, payload: response})\n}\n\n"]},"metadata":{},"sourceType":"module"}