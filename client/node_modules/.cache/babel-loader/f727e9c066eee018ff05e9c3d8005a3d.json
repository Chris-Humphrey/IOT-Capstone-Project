{"ast":null,"code":"var _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Search.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux'; // import addItemToCollection from '../actions/addItemToCollection';\n// import removeFromCollection from '../actions/removeFromCollection';\n\nimport { addToCollectionDb, displayCollectionDb, removeFromCollectionDb } from '../actions/';\nlet jsonPlants = jsonData.plants;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: []\n    };\n    this.addToCollection = this.addToCollection.bind(this);\n    this.displayCollection = this.displayCollection.bind(this);\n    this.removeFromCollection = this.removeFromCollection.bind(this);\n  } //   displayCollection(){\n  //     let collection = this.props.displayCollectionDb()\n  //     console.log(`display collection function ${collection}`)\n  //     return collection;\n  //   }\n\n\n  displayCollection() {\n    this.props.displayCollectionDb().then(result => {\n      // console.log(result)\n      return result;\n    });\n  }\n\n  addToCollection(e) {\n    e.preventDefault();\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value;\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          let newCollection = this.state.collection.concat(plant);\n          this.setState({\n            collection: newCollection\n          }, () => {\n            // this.props.onaddItemToCollection(plant)\n            this.props.addToCollectionDb(plant);\n            this.displayCollection();\n          });\n        }\n      }\n    } else {\n      console.log('fill blank');\n    }\n  }\n\n  removeFromCollection(e, renderPlant) {\n    e.preventDefault();\n    console.log('renderplant');\n    console.log(renderPlant);\n    this.props.removeFromCollectionDb(renderPlant);\n  } // componentWillMount(){\n  //         this.displayCollection()\n  //         console.log('component')\n  //         console.log(this.props.collection)\n  // }\n\n\n  render() {\n    console.log('renderrr');\n    console.log(this.props.collection);\n\n    if (this.props.collection.length = 0) {\n      this.displayCollection();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Plants API\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.plants.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item.name))), React.createElement(\"form\", {\n      onSubmit: this.addToCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: \"plantName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Add Item\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Collection\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.props.collection.map(item => item.plant.data.map(renderPlant => React.createElement(\"li\", {\n      key: renderPlant.plant_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, renderPlant.plant_id, React.createElement(\"button\", {\n      onClick: e => this.removeFromCollection(e, {\n        renderPlant\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Remove\")))))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    collection: state.collectionReducer.collection\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    // onaddItemToCollection: plant => dispatch(addItemToCollection(plant)),\n    removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)),\n    addToCollectionDb: plant => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: () => dispatch(displayCollectionDb())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Search.js"],"names":["React","jsonData","connect","addToCollectionDb","displayCollectionDb","removeFromCollectionDb","jsonPlants","plants","Search","Component","constructor","props","state","plant","collection","addToCollection","bind","displayCollection","removeFromCollection","then","result","e","preventDefault","plantName","refs","value","i","length","name","newCollection","concat","setState","console","log","renderPlant","render","map","item","id","data","plant_id","mapStateToProps","collectionReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\n// import addItemToCollection from '../actions/addItemToCollection';\n// import removeFromCollection from '../actions/removeFromCollection';\nimport {addToCollectionDb, displayCollectionDb, removeFromCollectionDb} from '../actions/';\n\nlet jsonPlants = jsonData.plants\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: []\n    }\n    this.addToCollection = this.addToCollection.bind(this)\n    this.displayCollection = this.displayCollection.bind(this)\n    this.removeFromCollection = this.removeFromCollection.bind(this)\n  }\n\n//   displayCollection(){\n//     let collection = this.props.displayCollectionDb()\n//     console.log(`display collection function ${collection}`)\n//     return collection;\n//   }\n\n  displayCollection() {\n    this.props.displayCollectionDb()\n    .then((result) => {\n        // console.log(result)\n        return result\n    })\n  }\n\n  addToCollection(e){\n    e.preventDefault();\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value\n    if (plantName !== ''){\n      for(let i=0; i<plants.length; i++){\n        let plant = plants[i];\n        if (plantName === plant.name){\n          let newCollection = this.state.collection.concat(plant)\n          this.setState({\n            collection: newCollection\n          }, ()=>{\n            // this.props.onaddItemToCollection(plant)\n            this.props.addToCollectionDb(plant)\n            this.displayCollection()\n            \n          })\n        }\n      }\n    }\n    else{\n      console.log('fill blank')\n    }\n  }\n\n  removeFromCollection(e, renderPlant){\n    e.preventDefault();\n    console.log('renderplant')\n    console.log(renderPlant)\n\n    this.props.removeFromCollectionDb(renderPlant)\n\n}\n\n// componentWillMount(){\n//         this.displayCollection()\n//         console.log('component')\n//         console.log(this.props.collection)\n// }\n\n\n  render() {\n      console.log('renderrr')\n      console.log(this.props.collection)\n      if(this.props.collection.length = 0){\n        this.displayCollection()\n      }\n\n    return (\n      <div>\n        <section>\n             <h2>Plants API</h2>\n             <ul>\n            {this.state.plants.map(item => (\n                <li key={item.id}>{item.name}</li>\n              ))}\n            </ul>\n            <form onSubmit={this.addToCollection}>\n              <input\n                type=\"text\"\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref=\"plantName\"\n              />\n              <button type=\"submit\">\n                Add Item\n              </button>\n            </form>\n            </section><hr/>\n          <section className=\"section\">\n            <h2>Collection</h2>\n            <ul>\n              {this.props.collection.map(item => (\n                  item.plant.data.map(renderPlant => (\n                    <li key={renderPlant.plant_id}>{renderPlant.plant_id}\n                    <button onClick={(e)=> this.removeFromCollection(e, {renderPlant})}>\n                      Remove\n                    </button> \n                  </li>\n                  ))\n              ))}\n            </ul>\n          </section>\n        </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return ({\n    collection: state.collectionReducer.collection, \n  })\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    // onaddItemToCollection: plant => dispatch(addItemToCollection(plant)),\n    removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)), \n    addToCollectionDb: (plant) => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: () => dispatch(displayCollectionDb())\n  }\n}\n\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n"]},"metadata":{},"sourceType":"module"}