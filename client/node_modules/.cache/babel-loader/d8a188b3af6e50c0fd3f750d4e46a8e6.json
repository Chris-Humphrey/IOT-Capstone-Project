{"ast":null,"code":"import _objectSpread from \"/Users/tarekalbeb/Desktop/untitled folder/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT } from '../actions/types';\nconst Initial_State = {\n  wishlist: [],\n  dbWishlist: []\n};\n\nlet wishlistReducer = (state = Initial_State, action) => {\n  switch (action.type) {\n    case WISH_ADD_PLANT:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        wishlist: state.wishlist.concat()\n      });\n\n    case WISH_DISPLAY_PLANT:\n      console.log(\"wish list reducer display case\");\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        dbWishlist: state.dbWishlist.concat(action.payload)\n      });\n\n    case WISH_REMOVE_PLANT:\n      console.log(\"inside wishlist remove reducer \".concat(action.payload));\n      let newWishlist = state.wishlist.filter(plant => {\n        return plant.name !== action.payload.name;\n      });\n      return _objectSpread({}, state, {\n        wishlist: newWishlist\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default wishlistReducer;","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/reducers/wishlistReducer.js"],"names":["WISH_ADD_PLANT","WISH_REMOVE_PLANT","WISH_DISPLAY_PLANT","Initial_State","wishlist","dbWishlist","wishlistReducer","state","action","type","console","log","payload","concat","newWishlist","filter","plant","name"],"mappings":";AAAA,SAAQA,cAAR,EAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAoE,kBAApE;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,UAAU,EAAE;AAFM,CAAtB;;AAKA,IAAIC,eAAe,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAL;AACIU,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BACOL,KADP;AAEIH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeS,MAAf;AAFd;;AAIJ,SAAKX,kBAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BACOL,KADP;AAEIF,QAAAA,UAAU,EAAGE,KAAK,CAACF,UAAN,CAAiBQ,MAAjB,CAAwBL,MAAM,CAACI,OAA/B;AAFjB;;AAIJ,SAAKX,iBAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,0CAA8CH,MAAM,CAACI,OAArD;AACA,UAAIE,WAAW,GAAGP,KAAK,CAACH,QAAN,CAAeW,MAAf,CAAuBC,KAAD,IAAS;AACjD,eAAOA,KAAK,CAACC,IAAN,KAAeT,MAAM,CAACI,OAAP,CAAeK,IAArC;AACC,OAFiB,CAAlB;AAGJ,+BACOV,KADP;AAEIH,QAAAA,QAAQ,EAAEU;AAFd;;AAIJ;AACI,aAAOP,KAAP;AAxBJ;AA0BH,CA3BD;;AA6BA,eAAeD,eAAf","sourcesContent":["import {WISH_ADD_PLANT, WISH_REMOVE_PLANT, WISH_DISPLAY_PLANT} from '../actions/types';\n\nconst Initial_State = {\n    wishlist: [],\n    dbWishlist: []\n}\n\nlet wishlistReducer = (state = Initial_State, action) => {\n    switch (action.type){\n        case WISH_ADD_PLANT:\n            console.log(action.payload)\n            return {\n                ...state,\n                wishlist: state.wishlist.concat()\n            }\n        case WISH_DISPLAY_PLANT: \n            console.log(`wish list reducer display case`)\n            console.log(action.payload)\n            return {\n                ...state,\n                dbWishlist : state.dbWishlist.concat(action.payload)\n            }\n        case WISH_REMOVE_PLANT: \n            console.log(`inside wishlist remove reducer ${action.payload}`)\n            let newWishlist = state.wishlist.filter((plant)=>{\n            return plant.name !== action.payload.name\n            })\n        return  {\n            ...state,\n            wishlist: newWishlist\n        }\n    default:\n        return state;\n    }\n}\n\nexport default wishlistReducer;"]},"metadata":{},"sourceType":"module"}