{"ast":null,"code":"import _objectSpread from \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Weather.js\";\nimport React from 'react';\nimport { Card, Input, Image, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport addZipCode from '../actions/addZipCode';\nimport addWeather from '../actions/addWeather';\nimport cloud from './images/cloud.png';\nimport rain from './images/rain.png'; // import ice from './images/ice.png';\n// import storm from './images/storm.png';\n\nimport sunny from './images/sunny.png';\nimport '../components/weather.css';\nlet apiAddress = \"http://api.openweathermap.org/data/2.5/weather?zip=\";\nlet imperial = \"&units=imperial\";\nlet apiKey = \"&appid=70fac660e1d65b98fb8ce269ad67799d\";\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onZipHandler = e => {\n      if (e.charCode === 13) {\n        this.props.onaddZipCode({\n          zipcode: e.target.value\n        });\n        this.setState({\n          zipcode: e.target.value,\n          error: ''\n        }, () => {\n          fetch(apiAddress + this.state.zipcode + imperial + apiKey).then(response => {\n            return response.json();\n          }).then(data => {\n            this.setState({\n              forecast: data.weather[0],\n              tempMain: data.main,\n              name: data.name\n            });\n            let image = this.state.forecast.main === 'Clouds' ? {\n              cloud\n            } : this.state.forecast.main === 'Haze' || this.state.forecast.main === 'Clear' ? {\n              sunny\n            } : this.state.forecast.main === 'Rain' ? {\n              rain\n            } : null;\n            this.props.onaddWeather(_objectSpread({}, this.state, {\n              forecast: data.weather[0],\n              tempMain: data.main,\n              weatherImage: Object.values(image)\n            }));\n          }).catch(err => {\n            this.setState({\n              error: 'Not a valid input'\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      forecast: [],\n      tempMain: {},\n      zipcode: 0,\n      error: '',\n      image: {},\n      name: ''\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      className: \"segment centered\",\n      id: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"What's the weather?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), Object.keys(this.props.weatherImage).length > 0 ? React.createElement(Image, {\n      src: this.props.weatherImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.forecast.description), Object.keys(this.props.weatherImage).length > 0 ? React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Low: \", this.props.tempMain.temp_min, \" High: \", this.props.tempMain.temp_max) : null, Object.keys(this.props.weatherImage).length > 0 ? React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Location: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.name)) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.error), React.createElement(Input, {\n      placeholder: \"Search...\",\n      onKeyPress: this.onZipHandler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    forecast: state.weatherReducer.forecast,\n    tempMain: state.weatherReducer.tempMain,\n    zipcode: state.weatherReducer.zipcode,\n    weatherImage: state.weatherReducer.weatherImage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onaddZipCode: zipcode => dispatch(addZipCode(zipcode)),\n    onaddWeather: weather => dispatch(addWeather(weather))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Weather.js"],"names":["React","Card","Input","Image","Label","connect","addZipCode","addWeather","cloud","rain","sunny","apiAddress","imperial","apiKey","Weather","Component","constructor","props","onZipHandler","e","charCode","onaddZipCode","zipcode","target","value","setState","error","fetch","state","then","response","json","data","forecast","weather","tempMain","main","name","image","onaddWeather","weatherImage","Object","values","catch","err","render","keys","length","description","temp_min","temp_max","bind","mapStateToProps","weatherReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Input, Image, Label } from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport addZipCode from '../actions/addZipCode';\nimport addWeather from '../actions/addWeather';\nimport cloud from './images/cloud.png';\nimport rain from './images/rain.png';\n// import ice from './images/ice.png';\n// import storm from './images/storm.png';\nimport sunny from './images/sunny.png';\nimport '../components/weather.css';\n\n\nlet apiAddress=\"http://api.openweathermap.org/data/2.5/weather?zip=\";\nlet imperial=\"&units=imperial\";\nlet apiKey=\"&appid=70fac660e1d65b98fb8ce269ad67799d\";\n\nclass Weather extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            forecast: [],\n            tempMain: {},\n            zipcode: 0,\n            error: '',\n            image: {},\n            name: ''\n        }\n    }\n\n    onZipHandler = (e) => {\n        \n        if(e.charCode === 13){\n            this.props.onaddZipCode({\n                zipcode: e.target.value        \n            })\n            this.setState({\n                zipcode: e.target.value,\n                error: ''\n            }, () => {\n                fetch(apiAddress + this.state.zipcode + imperial + apiKey)\n                .then((response) => {\n                    return response.json()\n                })\n                .then((data) => {\n                    this.setState({\n                        forecast: data.weather[0],\n                        tempMain: data.main,\n                        name: data.name\n                    })\n                    let image = ((this.state.forecast.main === 'Clouds') ? {cloud} : (this.state.forecast.main === 'Haze' || this.state.forecast.main === 'Clear') ? {sunny} : (this.state.forecast.main === 'Rain') ? {rain} : null )\n                    this.props.onaddWeather({\n                        ...this.state,\n                        forecast: data.weather[0],\n                        tempMain: data.main,\n                        weatherImage: Object.values(image)\n                    })\n                })\n                .catch(err => {\n                    this.setState({\n                        error: 'Not a valid input'\n                    })\n                })\n            })\n        }\n    }  \n\n\n\n    render() {\n        return (\n            <>  \n                <Card className=\"segment centered\" id=\"weather\"> \n                    <Card.Content>\n                        <Label>What's the weather?</Label><br/><br/>\n                        {(Object.keys(this.props.weatherImage).length > 0) ? (<Image src={this.props.weatherImage}/>) : null }\n                        <Card.Header>{this.props.forecast.description}</Card.Header>\n                        {(Object.keys(this.props.weatherImage).length > 0) ? (<Card.Description>Low: {this.props.tempMain.temp_min} High: {this.props.tempMain.temp_max}</Card.Description>) : null }\n                        {(Object.keys(this.props.weatherImage).length > 0) ? (<Card.Description>Location: <strong>{this.state.name}</strong></Card.Description>) : null }<br/>\n                        <label>{this.state.error}</label>\n                        <Input placeholder='Search...' onKeyPress={this.onZipHandler.bind(this)}\n                        />\n                    </Card.Content>\n                </Card>\n            </>\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return ({\n        forecast: state.weatherReducer.forecast,\n        tempMain: state.weatherReducer.tempMain,\n        zipcode: state.weatherReducer.zipcode,\n        weatherImage: state.weatherReducer.weatherImage\n    })\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onaddZipCode: zipcode => dispatch(addZipCode(zipcode)),\n        onaddWeather: weather => dispatch(addWeather(weather))\n    }\n}\n\n\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Weather);\n"]},"metadata":{},"sourceType":"module"}