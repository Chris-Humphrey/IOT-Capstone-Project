{"ast":null,"code":"var _jsxFileName = \"/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Search.js\";\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import Axios from 'axios';\n// import jsonDatas from '../data/plants.json';\n// let jsonData = jsonDatas.plants\n// class Search extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.addItemToCollection = this.addItemToCollection.bind(this);\n//     this.state = {\n//       plants: jsonData,\n//       collection: [],\n//       wishList : []\n//     }\n//   }\n//     // addItemToCollection(e){\n//     //   e.preventDefault();\n//     //   let plants = this.state.plants;\n//     //   if (e.target.value !== ''){\n//     //     for(let i=0; i<plants.length; i++){\n//     //       let plant = plants[i];\n//     //       if (e.target.value === plant.name){\n//     //         let newCollection = this.state.collection.concat(plant)\n//     //         this.setState({\n//     //           collection: newCollection\n//     //         })\n//     //       }\n//     //     }\n//     //     console.log(this.state.collection)\n//     //   }\n//     //   else{\n//     //     console.log('fill blank')\n//     //   }\n//     // }\n//     addItemToCollection(e){\n//       e.preventDefault();\n//       let collection = this.state.collection;\n//       let plants = this.state.plants;\n//       const newItem = document.getElementById(\"addInput\");\n//       const form = document.getElementById(\"addItemForm\");\n//       if (newItem.value !== ''){\n//         for(let i=0; i<plants.length; i++){\n//           let plant = plants[i];\n//           if (newItem.value === plant.name){\n//             let newCollection = collection.concat(plant)\n//             this.setState({\n//               collection: newCollection\n//             })\n//           }\n//         }\n//         console.log(this.state.collection)\n//         form.reset()\n//       }\n//       else{\n//         console.log('fill blank')\n//       }\n//     }\n//   removeFromCollection(item){\n//     item.preventDefault();\n//     let collection = this.state.collection.slice();\n//     console.log(this.state.collection)\n//     collection.splice(item.key, 1);\n//   this.setState({\n//     collection: collection\n//   });\n// }\n//   // componentDidMount(){\n//   //   this.plantsElements();\n//   // }\n//   render() {\n//     return(\n//       <div>\n//         <div>\n//           <section>\n//             <h2>Plants API</h2>\n//             <ul>\n//               {jsonData.map(item => (\n//                 <li key={item.id}>{item.name}</li>\n//               ))}\n//             </ul>\n//             {/* onSubmit={this.addItemToCollection} */}\n//             <form id=\"addItemForm\">\n//               <input\n//                 id={jsonData.id}\n//                 type=\"text\"\n//                 id=\"addInput\"\n//                 placeholder=\"Plant Name\"\n//                 ref=\"plantName\"\n//               />\n//               {/* onClick={this.addItemToCollection} */}\n//               <button type=\"submit\" onClick={this.addItemToCollection}>\n//                 Add Item\n//               </button>\n//             </form>\n//             </section><hr/>\n//           <section className=\"section\">\n//             <h2>Collection</h2>\n//             <ul>\n//               {this.state.collection.map(item => (\n//                 <li key={item.id}>{item.name}\n//                   <button onClick={this.removeFromCollection}>\n//                     Remove\n//                   </button> \n//                 </li>\n//               ))}\n//             </ul>\n//           </section>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n//   export default Search;\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux';\nimport addItemToCollection from '../actions/addItemToCollection';\nimport removeFromCollection from '../actions/removeFromCollection';\nimport { addToCollectionDb } from '../actions/';\nlet jsonPlants = jsonData.plants;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: []\n    };\n    this.addToCollection = this.addToCollection.bind(this);\n    this.removeFromCollection = this.removeFromCollection.bind(this);\n  }\n\n  addToCollection(e) {\n    e.preventDefault();\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value;\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          let newCollection = this.state.collection.concat(plant);\n          this.setState({\n            collection: newCollection\n          }, () => {\n            this.props.onaddItemToCollection(plant);\n            this.props.addToCollectionDb(plant);\n            console.log(this.state.collection[0]); // console.log(`plant obj: ${plant.name}`)\n          });\n        }\n      }\n    } else {\n      console.log('fill blank');\n    }\n  }\n\n  removeFromCollection(e) {\n    e.preventDefault();\n    let plantCollection = this.refs.plantCollection;\n    let collection = this.props.collection.slice();\n    console.log(collection);\n    console.log(this.state.collection);\n    collection.splice(plantCollection.key, 1);\n    this.setState({\n      collection: collection\n    }, () => {\n      console.log(this.state.collection); // console.log(plantCollection.name)\n\n      this.props.onremoveFromCollection(plantCollection);\n      console.log(this.props.collection);\n    });\n  }\n\n  render() {\n    console.log(\"Global state collection: \".concat(this.props.collection));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Plants API\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.state.plants.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, item.name))), React.createElement(\"form\", {\n      onSubmit: this.addToCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.plant.id,\n      type: \"text\",\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: \"plantName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Add Item\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Collection\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.collection.map(item => React.createElement(\"li\", {\n      ref: \"plantCollection\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, item.name, React.createElement(\"button\", {\n      onClick: this.removeFromCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Remove\"))))));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    collection: state.collectionReducer.collection\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onaddItemToCollection: plant => dispatch(addItemToCollection(plant)),\n    onremoveFromCollection: plant => dispatch(removeFromCollection(plant)),\n    addToCollectionDb: plant => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: plant => dispatch(displayCollectionDb(plant))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/components/Search.js"],"names":["React","jsonData","connect","addItemToCollection","removeFromCollection","addToCollectionDb","jsonPlants","plants","Search","Component","constructor","props","state","plant","collection","addToCollection","bind","e","preventDefault","plantName","refs","value","i","length","name","newCollection","concat","setState","onaddItemToCollection","console","log","plantCollection","slice","splice","key","onremoveFromCollection","render","map","item","id","mapStateToProps","collectionReducer","mapDispatchToProps","dispatch","displayCollectionDb"],"mappingskB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,SAAQC,iBAAR,QAAgC,aAAhC;AAEA,IAAIC,UAAU,GAAGL,QAAQ,CAACM,MAA1B;;AACA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXL,MAAAA,MAAM,EAAED,UADG;AAEXO,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKZ,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BY,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAGDD,EAAAA,eAAe,CAACE,CAAD,EAAG;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIX,MAAM,GAAG,KAAKK,KAAL,CAAWL,MAAxB;AACA,QAAIY,SAAS,GAAG,KAAKC,IAAL,CAAUD,SAAV,CAAoBE,KAApC;;AACA,QAAIF,SAAS,KAAK,EAAlB,EAAqB;AACnB,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACf,MAAM,CAACgB,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,YAAIT,KAAK,GAAGN,MAAM,CAACe,CAAD,CAAlB;;AACA,YAAIH,SAAS,KAAKN,KAAK,CAACW,IAAxB,EAA6B;AAC3B,cAAIC,aAAa,GAAG,KAAKb,KAAL,CAAWE,UAAX,CAAsBY,MAAtB,CAA6Bb,KAA7B,CAApB;AACA,eAAKc,QAAL,CAAc;AACZb,YAAAA,UAAU,EAAEW;AADA,WAAd,EAEG,MAAI;AACL,iBAAKd,KAAL,CAAWiB,qBAAX,CAAiCf,KAAjC;AACA,iBAAKF,KAAL,CAAWN,iBAAX,CAA6BQ,KAA7B;AACAgB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,UAAX,CAAsB,CAAtB,CAAZ,EAHK,CAIL;AACD,WAPD;AAQD;AACF;AACF,KAfD,MAgBI;AACFe,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AAED1B,EAAAA,oBAAoB,CAACa,CAAD,EAAG;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIa,eAAe,GAAG,KAAKX,IAAL,CAAUW,eAAhC;AACA,QAAIjB,UAAU,GAAG,KAAKH,KAAL,CAAWG,UAAX,CAAsBkB,KAAtB,EAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,UAAvB;AACAA,IAAAA,UAAU,CAACmB,MAAX,CAAkBF,eAAe,CAACG,GAAlC,EAAuC,CAAvC;AACF,SAAKP,QAAL,CAAc;AACZb,MAAAA,UAAU,EAAEA;AADA,KAAd,EAEG,MAAI;AACLe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,UAAvB,EADK,CAEL;;AACA,WAAKH,KAAL,CAAWwB,sBAAX,CAAkCJ,eAAlC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWG,UAAvB;AACD,KAPD;AAQD;;AAECsB,EAAAA,MAAM,GAAG;AACPP,IAAAA,OAAO,CAACC,GAAR,oCAAwC,KAAKnB,KAAL,CAAWG,UAAnD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,KAAKF,KAAL,CAAWL,MAAX,CAAkB8B,GAAlB,CAAsBC,IAAI,IACvB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACd,IAAxB,CADH,CADA,CAFL,EAOI;AAAM,MAAA,QAAQ,EAAE,KAAKT,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiB0B,EAD1B;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,WAAW,EAAC,YAJd;AAKE,MAAA,GAAG,EAAC,WALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAPJ,CADF,EAoBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBhB,EAqBI;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK3B,KAAL,CAAWE,UAAX,CAAsBuB,GAAtB,CAA0BC,IAAI,IAC7B;AAAI,MAAA,GAAG,EAAC,iBAAR;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCD,IAAI,CAACd,IAA9C,EACE;AAAQ,MAAA,OAAO,EAAE,KAAKpB,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,CADH,CAFF,CArBJ,CADF;AAoCD;;AA7FkC;;AAgGrC,IAAIoC,eAAe,GAAI5B,KAAD,IAAW;AAC/B,SAAQ;AACNE,IAAAA,UAAU,EAAEF,KAAK,CAAC6B,iBAAN,CAAwB3B;AAD9B,GAAR;AAID,CALD;;AAOA,IAAI4B,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLf,IAAAA,qBAAqB,EAAEf,KAAK,IAAI8B,QAAQ,CAACxC,mBAAmB,CAACU,KAAD,CAApB,CADnC;AAELsB,IAAAA,sBAAsB,EAAEtB,KAAK,IAAI8B,QAAQ,CAACvC,oBAAoB,CAACS,KAAD,CAArB,CAFpC;AAGLR,IAAAA,iBAAiB,EAAGQ,KAAD,IAAW8B,QAAQ,CAACtC,iBAAiB,CAACQ,KAAD,CAAlB,CAHjC;AAIL+B,IAAAA,mBAAmB,EAAG/B,KAAD,IAAW8B,QAAQ,CAACC,mBAAmB,CAAC/B,KAAD,CAApB;AAJnC,GAAP;AAMD,CAPD;;AAUA,eAAeX,OAAO,CACpBsC,eADoB,EAEpBE,kBAFoB,CAAP,CAGblC,MAHa,CAAf","sourcesContent":["// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import Axios from 'axios';\n// import jsonDatas from '../data/plants.json';\n\n\n// let jsonData = jsonDatas.plants\n\n// class Search extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.addItemToCollection = this.addItemToCollection.bind(this);\n//     this.state = {\n//       plants: jsonData,\n//       collection: [],\n//       wishList : []\n//     }\n//   }\n\n//     // addItemToCollection(e){\n//     //   e.preventDefault();\n//     //   let plants = this.state.plants;\n//     //   if (e.target.value !== ''){\n//     //     for(let i=0; i<plants.length; i++){\n//     //       let plant = plants[i];\n//     //       if (e.target.value === plant.name){\n//     //         let newCollection = this.state.collection.concat(plant)\n//     //         this.setState({\n//     //           collection: newCollection\n//     //         })\n//     //       }\n//     //     }\n//     //     console.log(this.state.collection)\n//     //   }\n//     //   else{\n//     //     console.log('fill blank')\n//     //   }\n//     // }\n\n//     addItemToCollection(e){\n//       e.preventDefault();\n//       let collection = this.state.collection;\n//       let plants = this.state.plants;\n//       const newItem = document.getElementById(\"addInput\");\n//       const form = document.getElementById(\"addItemForm\");\n\n//       if (newItem.value !== ''){\n//         for(let i=0; i<plants.length; i++){\n//           let plant = plants[i];\n//           if (newItem.value === plant.name){\n//             let newCollection = collection.concat(plant)\n//             this.setState({\n//               collection: newCollection\n//             })\n//           }\n//         }\n//         console.log(this.state.collection)\n//         form.reset()\n//       }\n//       else{\n//         console.log('fill blank')\n//       }\n//     }\n\n  //   removeFromCollection(item){\n  //     item.preventDefault();\n  //     let collection = this.state.collection.slice();\n  //     console.log(this.state.collection)\n  //     collection.splice(item.key, 1);\n  //   this.setState({\n  //     collection: collection\n  //   });\n  // }\n\n//   // componentDidMount(){\n//   //   this.plantsElements();\n//   // }\n\n\n//   render() {\n//     return(\n//       <div>\n//         <div>\n//           <section>\n//             <h2>Plants API</h2>\n//             <ul>\n//               {jsonData.map(item => (\n//                 <li key={item.id}>{item.name}</li>\n//               ))}\n//             </ul>\n//             {/* onSubmit={this.addItemToCollection} */}\n//             <form id=\"addItemForm\">\n//               <input\n//                 id={jsonData.id}\n//                 type=\"text\"\n//                 id=\"addInput\"\n//                 placeholder=\"Plant Name\"\n//                 ref=\"plantName\"\n//               />\n//               {/* onClick={this.addItemToCollection} */}\n//               <button type=\"submit\" onClick={this.addItemToCollection}>\n//                 Add Item\n//               </button>\n//             </form>\n//             </section><hr/>\n//           <section className=\"section\">\n//             <h2>Collection</h2>\n//             <ul>\n//               {this.state.collection.map(item => (\n//                 <li key={item.id}>{item.name}\n//                   <button onClick={this.removeFromCollection}>\n//                     Remove\n//                   </button> \n//                 </li>\n                \n//               ))}\n//             </ul>\n//           </section>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n//   export default Search;\n\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\nimport addItemToCollection from '../actions/addItemToCollection';\nimport removeFromCollection from '../actions/removeFromCollection';\nimport {addToCollectionDb} from '../actions/';\n\nlet jsonPlants = jsonData.plants\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: []\n    }\n    this.addToCollection = this.addToCollection.bind(this)\n    this.removeFromCollection = this.removeFromCollection.bind(this)\n  }\n\n  \n  addToCollection(e){\n    e.preventDefault();\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value\n    if (plantName !== ''){\n      for(let i=0; i<plants.length; i++){\n        let plant = plants[i];\n        if (plantName === plant.name){\n          let newCollection = this.state.collection.concat(plant)\n          this.setState({\n            collection: newCollection\n          }, ()=>{\n            this.props.onaddItemToCollection(plant)\n            this.props.addToCollectionDb(plant)\n            console.log(this.state.collection[0])\n            // console.log(`plant obj: ${plant.name}`)\n          })\n        }\n      }\n    }\n    else{\n      console.log('fill blank')\n    }\n  }\n\n  removeFromCollection(e){\n    e.preventDefault();\n    let plantCollection = this.refs.plantCollection\n    let collection = this.props.collection.slice();\n    console.log(collection)\n    console.log(this.state.collection)\n    collection.splice(plantCollection.key, 1);\n  this.setState({\n    collection: collection\n  }, ()=>{\n    console.log(this.state.collection)\n    // console.log(plantCollection.name)\n    this.props.onremoveFromCollection(plantCollection)\n    console.log(this.props.collection)\n  });\n}\n\n  render() {\n    console.log(`Global state collection: ${this.props.collection}`)\n    return (\n      <div>\n        <section>\n             <h2>Plants API</h2>\n             <ul>\n            {this.state.plants.map(item => (\n                <li key={item.id}>{item.name}</li>\n              ))}\n            </ul>\n            <form onSubmit={this.addToCollection}>\n              <input\n                value={this.state.plant.id}\n                type=\"text\"\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref=\"plantName\"\n              />\n              <button type=\"submit\">\n                Add Item\n              </button>\n            </form>\n            </section><hr/>\n          <section className=\"section\">\n            <h2>Collection</h2>\n            <ul>\n              {this.state.collection.map(item => (\n                <li ref=\"plantCollection\" key={item.id}>{item.name}\n                  <button onClick={this.removeFromCollection}>\n                    Remove\n                  </button> \n                </li>\n              ))}\n            </ul>\n          </section>\n        </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return ({\n    collection: state.collectionReducer.collection, \n\n  })\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onaddItemToCollection: plant => dispatch(addItemToCollection(plant)),\n    onremoveFromCollection: plant => dispatch(removeFromCollection(plant)), \n    addToCollectionDb: (plant) => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: (plant) => dispatch(displayCollectionDb(plant))\n  }\n}\n\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n"]},"metadata":{},"sourceType":"module"}