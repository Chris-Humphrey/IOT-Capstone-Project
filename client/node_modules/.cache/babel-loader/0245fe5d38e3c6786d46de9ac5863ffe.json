{"ast":null,"code":"import { AUTH_USER, AUTH_ERROR, AUTH_SIGNOUT, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT, WISH_ADD_PLANT } from './types';\nimport axios from 'axios'; // REFACTORING SIGNUP\n\nlet decodeToken = token => {\n  let split_token = token.split('.');\n  let token_payload = split_token[1];\n  let decoded_token_string = atob(token_payload);\n  let decoded_token = JSON.parse(decoded_token_string);\n  localStorage.setItem('user_id', decoded_token.sub);\n  localStorage.setItem('user_name', decoded_token.user_name);\n  console.log(\"local storage user ID: \".concat(localStorage.user_id));\n  console.log(\"local Storage user name: \".concat(localStorage.user_name));\n};\n\nexport const signup = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signup', formProps); //dispatch\n\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token,\n      isLoggedIn: true,\n      username: formProps.username\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'That email is already in use...'\n    });\n  }\n};\nexport const signin = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signin', formProps);\n    console.log('signin form props');\n    console.log(localStorage.user_name);\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token,\n      isLoggedIn: true,\n      username: localStorage.user_name\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'The email or password is incorrect...'\n    });\n  }\n};\nexport const signout = () => {\n  localStorage.clear();\n  return {\n    type: AUTH_SIGNOUT,\n    payload: '',\n    isLoggedIn: false\n  };\n}; //Add/remove from collection:\n\nexport const addToCollectionDb = plant => async dispatch => {\n  // try{\n  // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n  let response = await axios.post('/colAdd', {\n    plant_id: plant.id,\n    user_id: localStorage.user_id\n  });\n  console.log(\"add to collection axios response: \".concat(response)); //dispatch\n\n  dispatch({\n    type: COL_ADD_PLANT,\n    payload: plant\n  });\n  localStorage.setItem('plant_id', response.data.plant_id);\n  console.log(\"after setItem localstorage \".concat(response.data.plant_id));\n};\nexport const displayCollectionDb = () => async dispatch => {\n  let response = await axios.post('/collection', {\n    user_id: localStorage.user_id\n  });\n  console.log('response');\n  console.log(response.data);\n  dispatch({\n    type: DISPLAY_COL_ITEMS,\n    payload: response.data\n  });\n};\nexport const removeFromCollectionDb = plant => async dispatch => {\n  let response = await axios.post('/colRemove', {\n    user_id: localStorage.user_id,\n    plant_id: plant.renderPlant.plant_id\n  });\n  console.log('action');\n  console.log(plant.renderPlant);\n  dispatch({\n    type: COL_REMOVE_PLANT,\n    payload: plant.renderPlant\n  }); // localStorage.removeItem('plant_id')\n};\nexport const addToWishlistDb = plant => async dispatch => {\n  let response = await axios.post('/wishAdd', {\n    user_id: localStorage.user_id,\n    plant_id: plant.id\n  });\n  console.log(\"add wishlist axios response \".concat(response));\n  console.log(\"payload plant.item \".concat(plant.name));\n  dispatch({\n    type: WISH_ADD_PLANT,\n    payload: plant\n  });\n};","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/actions/index.js"],"names":["AUTH_USER","AUTH_ERROR","AUTH_SIGNOUT","COL_ADD_PLANT","DISPLAY_COL_ITEMS","COL_REMOVE_PLANT","WISH_ADD_PLANT","axios","decodeToken","token","split_token","split","token_payload","decoded_token_string","atob","decoded_token","JSON","parse","localStorage","setItem","sub","user_name","console","log","user_id","signup","formProps","callback","dispatch","response","post","type","payload","data","isLoggedIn","username","e","signin","signout","clear","addToCollectionDb","plant","plant_id","id","displayCollectionDb","removeFromCollectionDb","renderPlant","addToWishlistDb","name"],"mappings":"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","sourcesContent":["import { AUTH_USER, AUTH_ERROR, AUTH_SIGNOUT, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT, WISH_ADD_PLANT} from './types';\nimport axios from 'axios';\n\n\n// REFACTORING SIGNUP\n\nlet decodeToken = (token)=>{\n    let split_token = token.split('.')\n    let token_payload = split_token[1];\n    let decoded_token_string = atob(token_payload);\n    let decoded_token = JSON.parse(decoded_token_string)\n    localStorage.setItem('user_id', decoded_token.sub);\n    localStorage.setItem('user_name', decoded_token.user_name)\n    console.log(`local storage user ID: ${localStorage.user_id}`)\n    console.log(`local Storage user name: ${localStorage.user_name}`)\n}\n\nexport const signup = (formProps, callback) => async dispatch =>{\n\n    try{\n        let response = await axios.post('/signup', formProps);\n\n        //dispatch\n\n        dispatch({type: AUTH_USER, payload: response.data.token, isLoggedIn: true, username: formProps.username});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'That email is already in use...'})\n    }\n};\n\nexport const signin = (formProps, callback) => async dispatch => {\n\n    try {\n        let response = await axios.post('/signin', formProps);\n\n        console.log('signin form props')\n        console.log(localStorage.user_name)\n        \n        dispatch({type: AUTH_USER, payload: response.data.token, isLoggedIn: true, username: localStorage.user_name});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'The email or password is incorrect...'})\n    }\n\n}\n\nexport const signout = () => {\n\n    localStorage.clear()\n    return {\n        type: AUTH_SIGNOUT,\n        payload: '',\n        isLoggedIn: false\n    }\n}\n\n//Add/remove from collection:\nexport const addToCollectionDb = (plant) => async dispatch =>{\n\n    // try{\n        // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n        let response = await axios.post('/colAdd', \n        {plant_id : plant.id, user_id: localStorage.user_id})\n\n    console.log(`add to collection axios response: ${response}`)\n\n    //dispatch\n\n    dispatch({type: COL_ADD_PLANT, \n        payload: plant});\n\n    localStorage.setItem('plant_id', response.data.plant_id);\n    console.log(`after setItem localstorage ${response.data.plant_id}`) \n}\n\nexport const displayCollectionDb = () => async dispatch => {\n    let response = await axios.post('/collection', {user_id: localStorage.user_id})\n    console.log('response')\n    console.log(response.data)\n    dispatch({type: DISPLAY_COL_ITEMS, payload: response.data});\n}\n\nexport const removeFromCollectionDb = (plant) => async dispatch => {\n    \n    let response = await axios.post('/colRemove', {user_id: localStorage.user_id, plant_id: plant.renderPlant.plant_id})\n    console.log('action')\n    console.log(plant.renderPlant)\n    dispatch({type: COL_REMOVE_PLANT, payload: plant.renderPlant})\n    // localStorage.removeItem('plant_id')\n}\n\nexport const addToWishlistDb = (plant) => async dispatch => {\n    let response = await axios.post('/wishAdd', {user_id: localStorage.user_id, plant_id: plant.id})\n    console.log(`add wishlist axios response ${response}`)\n    console.log(`payload plant.item ${plant.name}`)\n    dispatch({type: WISH_ADD_PLANT, payload: plant})\n}\n\n\n"]},"metadata":{},"sourceType":"module"}