{"ast":null,"code":"import { AUTH_USER, AUTH_ERROR, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT } from './types';\nimport axios from 'axios'; // REFACTORING SIGNUP\n\nlet decodeToken = token => {\n  let split_token = token.split('.');\n  let token_payload = split_token[1];\n  let decoded_token_string = atob(token_payload);\n  let decoded_token = JSON.parse(decoded_token_string);\n  localStorage.setItem('user_id', decoded_token.sub);\n  localStorage.setItem('user_name', decoded_token.user_name);\n  console.log(\"local storage user ID: \".concat(localStorage.user_id));\n  console.log(\"local Storage user name: \".concat(localStorage.user_name));\n};\n\nexport const signup = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signup', formProps);\n    console.log(response); //dispatch\n\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'That email is already in use...'\n    });\n  }\n};\nexport const signin = (formProps, callback) => async dispatch => {\n  try {\n    let response = await axios.post('/signin', formProps);\n    dispatch({\n      type: AUTH_USER,\n      payload: response.data.token\n    });\n    localStorage.setItem('token', response.data.token);\n    decodeToken(response.data.token);\n    callback();\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: 'The email or password is incorrect...'\n    });\n  }\n};\nexport const signout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_USER,\n    payload: ''\n  };\n}; //Add/remove from collection:\n\nexport const addToCollectionDb = plant => async dispatch => {\n  // try{\n  // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n  let response = await axios.post('/colAdd', {\n    plant_id: plant.id,\n    user_id: localStorage.user_id\n  });\n  console.log(\"add to collection axios response: \".concat(response)); //dispatch\n\n  dispatch({\n    type: COL_ADD_PLANT,\n    payload: plant\n  });\n  localStorage.setItem('plant_id', response.data.plant_id);\n  console.log(\"after setItem localstorage \".concat(response.data.plant_id)); // }\n  // catch(e){\n  //     dispatch({type: COL_ADD_PLANT, payload: 'That plant is already in collection...'})\n  // }\n};\nexport const displayCollectionDb = plant => async dispatch => {\n  let response = await axios.post('/collection', {\n    user_id: localStorage.user_id\n  });\n  dispatch({\n    type: DISPLAY_COL_ITEMS,\n    payload: response.plant\n  });\n};\nexport const removeFromCollectionDb = plant => async dispatch => {\n  let response = await axios.post('/colRemove', {\n    user_id: localStorage.user_id,\n    plant_id: plant.item.id\n  });\n  console.log(\"\".concat(plant.item.id));\n  dispatch({\n    type: COL_REMOVE_PLANT,\n    payload: plant.item\n  }); // localStorage.removeItem('plant_id')\n};\nexport const addToWishlistDb = plant => async dispatch => {\n  let response = await axios.post('/wishAdd', {\n    user_id: localStorage.user_id,\n    plant_id: plant.id\n  });\n  console.log(\"\".concat(plant.id));\n  dispatch({\n    type: WISH_ADD_PLANT,\n    payload: plant.item\n  });\n};","map":{"version":3,"sources":["/Users/tarekalbeb/Desktop/untitled folder/client/src/actions/index.js"],"names":["AUTH_USER","AUTH_ERROR","COL_ADD_PLANT","DISPLAY_COL_ITEMS","COL_REMOVE_PLANT","axios","decodeToken","token","split_token","split","token_payload","decoded_token_string","atob","decoded_token","JSON","parse","localStorage","setItem","sub","user_name","console","log","user_id","signup","formProps","callback","dispatch","response","post","type","payload","data","e","signin","signout","removeItem","addToCollectionDb","plant","plant_id","id","displayCollectionDb","removeFromCollectionDb","item","addToWishlistDb","WISH_ADD_PLANT"],"mappings":"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","sourcesContent":["import { AUTH_USER, AUTH_ERROR, COL_ADD_PLANT, DISPLAY_COL_ITEMS, COL_REMOVE_PLANT} from './types';\nimport axios from 'axios';\n\n\n// REFACTORING SIGNUP\n\nlet decodeToken = (token)=>{\n    let split_token = token.split('.')\n    let token_payload = split_token[1];\n    let decoded_token_string = atob(token_payload);\n    let decoded_token = JSON.parse(decoded_token_string)\n    localStorage.setItem('user_id', decoded_token.sub);\n    localStorage.setItem('user_name', decoded_token.user_name)\n    console.log(`local storage user ID: ${localStorage.user_id}`)\n    console.log(`local Storage user name: ${localStorage.user_name}`)\n}\n\nexport const signup = (formProps, callback) => async dispatch =>{\n\n    try{\n        let response = await axios.post('/signup', formProps);\n\n        console.log(response)\n\n        //dispatch\n\n        dispatch({type: AUTH_USER, payload: response.data.token});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'That email is already in use...'})\n    }\n};\n\nexport const signin = (formProps, callback) => async dispatch => {\n\n    try {\n        let response = await axios.post('/signin', formProps);\n        \n        dispatch({type: AUTH_USER, payload: response.data.token});\n\n        localStorage.setItem('token', response.data.token);\n        decodeToken(response.data.token)\n        callback();\n    }\n    catch(e){\n        dispatch({type: AUTH_ERROR, payload: 'The email or password is incorrect...'})\n    }\n\n}\n\nexport const signout = () => {\n\n    localStorage.removeItem('token')\n    return {\n        type: AUTH_USER,\n        payload: ''\n    }\n}\n\n//Add/remove from collection:\nexport const addToCollectionDb = (plant) => async dispatch =>{\n\n    // try{\n        // console.log(`indide addtocollectionDB plant ID ${plant.item.id}`)\n        let response = await axios.post('/colAdd', \n        {plant_id : plant.id, user_id: localStorage.user_id})\n\n        console.log(`add to collection axios response: ${response}`)\n\n        //dispatch\n\n        dispatch({type: COL_ADD_PLANT, \n            payload: plant});\n\n        localStorage.setItem('plant_id', response.data.plant_id);\n        console.log(`after setItem localstorage ${response.data.plant_id}`)\n    // }\n    // catch(e){\n    //     dispatch({type: COL_ADD_PLANT, payload: 'That plant is already in collection...'})\n    // }\n};\n\nexport const displayCollectionDb = (plant) => async dispatch => {\n    let response = await axios.post('/collection', {user_id: localStorage.user_id})\n    dispatch({type: DISPLAY_COL_ITEMS, \n        payload: response.plant});\n}\n\nexport const removeFromCollectionDb = (plant) => async dispatch => {\n    \n    let response = await axios.post('/colRemove', {user_id: localStorage.user_id, plant_id: plant.item.id})\n    console.log(`${plant.item.id}`)\n    dispatch({type: COL_REMOVE_PLANT, payload: plant.item})\n    // localStorage.removeItem('plant_id')\n}\n\nexport const addToWishlistDb = (plant) => async dispatch => {\n    let response = await axios.post('/wishAdd', {user_id: localStorage.user_id, plant_id: plant.id})\n    console.log(`${plant.id}`)\n    dispatch({type: WISH_ADD_PLANT, payload: plant.item})\n}\n\n\n"]},"metadata":{},"sourceType":"module"}