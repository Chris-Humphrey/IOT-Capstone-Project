{"ast":null,"code":"var _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Wishlist.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux';\nimport { addToWishlistDb, displayWishlistDb, removeFromWishlistDb } from '../actions';\nlet jsonPlants = jsonData.plants;\n\nclass Wishlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      wishlist: []\n    };\n    this.addToWishlist = this.addToWishlist.bind(this);\n    this.displayWishlist = this.displayWishlist.bind(this);\n  }\n\n  addToWishlist(e) {\n    e.preventDefault();\n    console.log(\"event happened \".concat(e));\n    console.log(this.refs.plantNames.value);\n    let plants = this.state.plants;\n    let plantName = this.refs.plantNames.value;\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          this.props.addToWishlistDb(plant);\n          this.displayWishlist();\n          console.log(\"added \".concat(plant.name, \" to wishlist db\"));\n          console.log(\"added to wishlist db\");\n        }\n      }\n    } else {\n      alert('fill in blanks');\n    }\n  }\n\n  displayWishlist() {\n    this.props.displayWishlistDb();\n  }\n\n  removeFromWishlist(e, item) {\n    e.preventDefault();\n    this.props.removeFromWishlistDb(item);\n  }\n\n  componentDidMount() {\n    this.displayWishlist();\n  } // componentDidUpdate(prevProps){\n  //   if(this.props.dbWishlist !== prevProps.dbWishlist){\n  //     this.addToWishlist();\n  //   }\n  // }\n\n\n  render() {\n    console.log(this.props.wishlist);\n    console.log(this.props.dbWishlist);\n    return (// <div>\n      //     <section>\n      //      <h2>Plants API</h2>\n      //      <ul>\n      //     {this.state.plants.map(item => (\n      //         <li key={item.id}>{item.name}</li> \n      //       ))}\n      //     </ul>\n      //     <form onSubmit={this.addToWishlist}>\n      //       <input\n      //         type=\"text\"\n      //         id=\"addInput\"\n      //         placeholder=\"Plant Name\"\n      //         ref=\"plantNames\"\n      //       />\n      //       <button type=\"submit\">\n      //         Add Item\n      //       </button>\n      //     </form>\n      //     </section><hr/>\n      //     <section className=\"section\">\n      //     <h2>wishlist</h2>\n      //     <ul>\n      //       {this.props.dbWishlist.map((item) => {\n      //         return <li key={item.id}> {item.plant_name}\n      //           <button onClick={(e)=>{this.removeFromWishlist(e, {item})}}> Remove </button> \n      //           {/* <img src={item.image_url}/> */}\n      //       </li>\n      //       })}\n      //     </ul>\n      //   </section>\n      // </div>\n      React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"ui search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Add to Favorites\"), React.createElement(Button, {\n        secondary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add to Wishlist\"))), React.createElement(Card.Group, {\n        className: \"segment centered\",\n        id: \"cardback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.props.dbCollection.map(item => {\n        return React.createElement(Card, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Image, {\n          floated: \"right\",\n          src: item.image_url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, item.name)), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Moisture:\", this.state.sensor <= 15 && React.createElement(Label, {\n          circular: true,\n          color: 'red',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, this.state.sensor), this.state.sensor <= 35 && this.state.sensor >= 16 && React.createElement(Label, {\n          circular: true,\n          color: 'yellow',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, this.state.sensor), this.state.sensor <= 100 && this.state.sensor >= 36 && React.createElement(Label, {\n          circular: true,\n          color: 'green',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, this.state.sensor))), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui two buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Button, {\n          basic: true,\n          color: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Add\"), React.createElement(Button, {\n          basic: true,\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Remove\"))));\n      })))\n    );\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    wishlist: state.wishlistReducer.wishlist,\n    dbWishlist: state.wishlistReducer.dbWishlist\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addToWishlistDb: plant => dispatch(addToWishlistDb(plant)),\n    displayWishlistDb: () => dispatch(displayWishlistDb()),\n    removeFromWishlistDb: plant => dispatch(removeFromWishlistDb(plant))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Wishlist.js"],"names":["React","jsonData","connect","addToWishlistDb","displayWishlistDb","removeFromWishlistDb","jsonPlants","plants","Wishlist","Component","constructor","props","state","plant","wishlist","addToWishlist","bind","displayWishlist","e","preventDefault","console","log","refs","plantNames","value","plantName","i","length","name","alert","removeFromWishlist","item","componentDidMount","render","dbWishlist","dbCollection","map","id","image_url","sensor","mapStateToProps","wishlistReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\nimport {addToWishlistDb, displayWishlistDb, removeFromWishlistDb} from '../actions'\n\nlet jsonPlants = jsonData.plants\nclass Wishlist extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        plants: jsonPlants,\n        plant: [],\n        wishlist: []\n      }\n      this.addToWishlist = this.addToWishlist.bind(this)\n      this.displayWishlist = this.displayWishlist.bind(this)\n\n    }\n\n    addToWishlist(e){\n        e.preventDefault();\n        console.log(`event happened ${e}`)\n        console.log(this.refs.plantNames.value)\n        let plants = this.state.plants;\n        let plantName = this.refs.plantNames.value\n        if (plantName !== ''){\n            for(let i=0; i<plants.length; i++){\n            let plant = plants[i];\n            if (plantName === plant.name){\n                this.props.addToWishlistDb(plant)\n        this.displayWishlist()\n        console.log(`added ${plant.name} to wishlist db`)\n        console.log(`added to wishlist db`)\n        }\n      }\n    }\n        else{\n        alert('fill in blanks')\n        }\n  }     \n\ndisplayWishlist(){\n  this.props.displayWishlistDb()\n}\n\nremoveFromWishlist(e, item){\n  e.preventDefault();\n  this.props.removeFromWishlistDb(item)\n}\n\ncomponentDidMount(){\n    this.displayWishlist()\n  }\n\n// componentDidUpdate(prevProps){\n//   if(this.props.dbWishlist !== prevProps.dbWishlist){\n//     this.addToWishlist();\n//   }\n// }\n\nrender() {\n  console.log(this.props.wishlist)\n  console.log(this.props.dbWishlist)\n    return (\n        // <div>\n        //     <section>\n        //      <h2>Plants API</h2>\n        //      <ul>\n        //     {this.state.plants.map(item => (\n        //         <li key={item.id}>{item.name}</li> \n        //       ))}\n        //     </ul>\n        //     <form onSubmit={this.addToWishlist}>\n        //       <input\n        //         type=\"text\"\n        //         id=\"addInput\"\n        //         placeholder=\"Plant Name\"\n        //         ref=\"plantNames\"\n        //       />\n        //       <button type=\"submit\">\n        //         Add Item\n        //       </button>\n        //     </form>\n        //     </section><hr/>\n\n        //     <section className=\"section\">\n        //     <h2>wishlist</h2>\n        //     <ul>\n        //       {this.props.dbWishlist.map((item) => {\n        //         return <li key={item.id}> {item.plant_name}\n        //           <button onClick={(e)=>{this.removeFromWishlist(e, {item})}}> Remove </button> \n        //           {/* <img src={item.image_url}/> */}\n        //       </li>\n        //       })}\n                \n        //     </ul>\n        //   </section>\n        // </div>\n\n    <>\n        <div className=\"ui search\">\n            <input type=\"text\"></input>\n            <div>\n            <Button primary>Add to Favorites</Button>\n            <Button secondary>Add to Wishlist</Button>\n            </div>\n          </div>\n\n      <Card.Group className=\"segment centered\" id=\"cardback\">\n          {this.props.dbCollection.map((item) => {\n            return (\n                <Card key={item.id}>\n                <Card.Content>\n                  <Image floated='right' src={item.image_url} />\n                  <Card.Header>{item.name}</Card.Header>\n                </Card.Content>\n                <Card.Content>\n                    <Card.Description>\n                    Moisture:\n                    { (this.state.sensor <= 15) &&\n                    <Label circular color={'red'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    { (this.state.sensor <= 35 && this.state.sensor >= 16) &&\n                    <Label circular color={'yellow'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    { (this.state.sensor <= 100 && this.state.sensor >= 36) &&\n                    <Label circular color={'green'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className='ui two buttons'>\n                    <Button basic color='green'>\n                      Add\n                    </Button>\n                    <Button basic color='red'>\n                      Remove\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n            )\n          }\n          )}\n        </Card.Group>\n  </>\n\n    )}\n        }\n\nlet mapStateToProps = (state) => {\n    return ({\n      wishlist: state.wishlistReducer.wishlist, \n      dbWishlist : state.wishlistReducer.dbWishlist\n    })\n  }\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n      addToWishlistDb : (plant) => dispatch(addToWishlistDb(plant)),\n      displayWishlistDb: () => dispatch(displayWishlistDb()),\n      removeFromWishlistDb: (plant) => dispatch(removeFromWishlistDb(plant))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);"]},"metadata":{},"sourceType":"module"}