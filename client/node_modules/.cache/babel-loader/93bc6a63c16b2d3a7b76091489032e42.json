{"ast":null,"code":"var _jsxFileName = \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Collection.js\";\nimport React from 'react';\nimport jsonData from '../data/plants.json';\nimport { connect } from 'react-redux';\nimport { addToCollectionDb, displayCollectionDb, removeFromCollectionDb } from '../actions/';\nimport { Button, // Container,\n// Divider,\n// Grid,\n// Header,\n// Icon,\nImage, Label, // List,\n// Menu,\n// Responsive,\n// Segment,\n// Sidebar,\n// Visibility,\nInput, Card, Form // Search\n} from 'semantic-ui-react';\nlet jsonPlants = jsonData.plants;\n\nclass Collection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: jsonPlants,\n      plant: [],\n      collection: []\n    };\n    this.addToCollection = this.addToCollection.bind(this);\n    this.displayCollection = this.displayCollection.bind(this);\n    this.removeFromCollection = this.removeFromCollection.bind(this);\n  }\n\n  addToCollection(e) {\n    e.preventDefault();\n    console.log(this.refs.plantName);\n    let plants = this.state.plants;\n    let plantName = this.refs.plantName.value;\n\n    if (plantName !== '') {\n      for (let i = 0; i < plants.length; i++) {\n        let plant = plants[i];\n\n        if (plantName === plant.name) {\n          this.props.addToCollectionDb(plant);\n          this.displayCollection();\n          console.log(\"added \".concat(plant.name, \" to wishlist db\"));\n          console.log(\"added to wishlist db\");\n        }\n      }\n    } else {\n      alert('fill in blanks');\n    }\n  }\n\n  displayCollection() {\n    this.props.displayCollectionDb();\n  }\n\n  removeFromCollection(e, plants) {\n    e.preventDefault();\n    console.log(plants);\n    this.props.removeFromCollectionDb(plants);\n  }\n\n  componentDidMount() {\n    this.displayCollection();\n  } // componentDidUpdate(prevProps){\n  //   if(this.props.dbWishlist !== prevProps.dbWishlist){\n  //     this.addToWishlist();\n  //   }\n  // }\n\n\n  render() {\n    console.log(this.props.collection);\n    console.log(this.props.dbCollection);\n    return React.createElement(React.Fragment, null, React.createElement(Form, {\n      onSubmit: this.addToCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      id: \"addInput\",\n      placeholder: \"Plant Name\",\n      ref: \"plantName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Add Item To Collection\")), React.createElement(Card.Group, {\n      className: \"segment centered\",\n      id: \"cardback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.dbCollection.map(item => {\n      return React.createElement(Card, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Image, {\n        floated: \"right\",\n        src: item.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.name)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Moisture:\", this.state.sensor <= 15 && React.createElement(Label, {\n        circular: true,\n        color: 'red',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.sensor), this.state.sensor <= 35 && this.state.sensor >= 16 && React.createElement(Label, {\n        circular: true,\n        color: 'yellow',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.state.sensor), this.state.sensor <= 100 && this.state.sensor >= 36 && React.createElement(Label, {\n        circular: true,\n        color: 'green',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.sensor))), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        basic: true,\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Button, {\n        basic: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Remove\"))));\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    collection: state.collectionReducer.collection,\n    dbCollection: state.collectionReducer.dbCollection\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)),\n    addToCollectionDb: plant => dispatch(addToCollectionDb(plant)),\n    displayCollectionDb: () => dispatch(displayCollectionDb())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Collection);","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/components/Collection.js"],"names":["React","jsonData","connect","addToCollectionDb","displayCollectionDb","removeFromCollectionDb","Button","Image","Label","Input","Card","Form","jsonPlants","plants","Collection","Component","constructor","props","state","plant","collection","addToCollection","bind","displayCollection","removeFromCollection","e","preventDefault","console","log","refs","plantName","value","i","length","name","alert","componentDidMount","render","dbCollection","map","item","id","image_url","sensor","mapStateToProps","collectionReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport jsonData from '../data/plants.json';\nimport {connect} from 'react-redux';\nimport {addToCollectionDb, displayCollectionDb, removeFromCollectionDb} from '../actions/';\nimport {\n    Button,\n    // Container,\n    // Divider,\n    // Grid,\n    // Header,\n    // Icon,\n    Image,\n    Label,\n    // List,\n    // Menu,\n    // Responsive,\n    // Segment,\n    // Sidebar,\n    // Visibility,\n    Input,\n    Card,\n    Form\n    // Search\n  } from 'semantic-ui-react';\n\n\nlet jsonPlants = jsonData.plants\nclass Collection extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        plants: jsonPlants,\n        plant: [],\n        collection: []\n      }\n      this.addToCollection = this.addToCollection.bind(this)\n      this.displayCollection = this.displayCollection.bind(this)\n      this.removeFromCollection = this.removeFromCollection.bind(this)\n    }\n\n    addToCollection(e){\n        e.preventDefault();\n        console.log(this.refs.plantName)\n        let plants = this.state.plants;\n        let plantName = this.refs.plantName.value\n        if (plantName !== ''){\n            for(let i=0; i<plants.length; i++){\n            let plant = plants[i];\n            if (plantName === plant.name){\n                this.props.addToCollectionDb(plant)\n        this.displayCollection()\n        console.log(`added ${plant.name} to wishlist db`)\n        console.log(`added to wishlist db`)\n        }\n      }\n    }\n        else{\n        alert('fill in blanks')\n        }\n  }     \n\ndisplayCollection(){\n  this.props.displayCollectionDb()\n}\n\nremoveFromCollection(e, plants){\n    e.preventDefault();\n    console.log(plants)\n\n    this.props.removeFromCollectionDb(plants)\n}\n\ncomponentDidMount(){\n    this.displayCollection()\n  }\n\n// componentDidUpdate(prevProps){\n//   if(this.props.dbWishlist !== prevProps.dbWishlist){\n//     this.addToWishlist();\n//   }\n// }\n\nrender() {\n  console.log(this.props.collection)\n  console.log(this.props.dbCollection)\n    return (\n        <>\n          <Form onSubmit={this.addToCollection}>\n              <Input\n                type=\"text\"\n                id=\"addInput\"\n                placeholder=\"Plant Name\"\n                ref=\"plantName\"\n              />\n              <Button type=\"submit\">\n                Add Item To Collection\n              </Button>\n            </Form>\n\n      <Card.Group className=\"segment centered\" id=\"cardback\">\n          {this.props.dbCollection.map((item) => {\n            return (\n                <Card key={item.id}>\n                <Card.Content>\n                  <Image floated='right' src={item.image_url} />\n                  <Card.Header>{item.name}</Card.Header>\n                </Card.Content>\n                <Card.Content>\n                    <Card.Description>\n                    Moisture:\n                    { (this.state.sensor <= 15) &&\n                    <Label circular color={'red'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    { (this.state.sensor <= 35 && this.state.sensor >= 16) &&\n                    <Label circular color={'yellow'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    { (this.state.sensor <= 100 && this.state.sensor >= 36) &&\n                    <Label circular color={'green'}>\n                        {this.state.sensor}\n                    </Label>\n                    }\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className='ui two buttons'>\n                    <Button basic color='green'>\n                      Add\n                    </Button>\n                    <Button basic color='red'>\n                      Remove\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n            )\n          }\n          )}\n        </Card.Group>\n  </>\n\n    )}\n        }\n\nlet mapStateToProps = (state) => {\n    return ({\n      collection: state.collectionReducer.collection, \n      dbCollection : state.collectionReducer.dbCollection\n    })\n  }\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        removeFromCollectionDb: plant => dispatch(removeFromCollectionDb(plant)), \n        addToCollectionDb: (plant) => dispatch(addToCollectionDb(plant)),\n        displayCollectionDb: () => dispatch(displayCollectionDb())\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Collection);"]},"metadata":{},"sourceType":"module"}