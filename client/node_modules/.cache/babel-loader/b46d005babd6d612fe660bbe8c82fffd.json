{"ast":null,"code":"import _objectSpread from \"/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { AUTH_USER, AUTH_ERROR, AUTH_SIGNOUT } from '../actions/types';\nconst Initial_State = {\n  authenticated: \"\",\n  errorMessage: \"\",\n  isLoggedIn: false,\n  username: '',\n  zipcode: 0\n};\n\nlet auth = (state = Initial_State, action) => {\n  console.log('payloadddd', action.payload);\n  console.log(action.isLoggedIn);\n\n  switch (action.type) {\n    case AUTH_USER:\n      return _objectSpread({}, state, {\n        authenticated: action.payload,\n        isLoggedIn: action.payload.isLoggedIn,\n        username: action.payload.username,\n        zipcode: action.payload.zipcode\n      });\n\n    case AUTH_ERROR:\n      return _objectSpread({}, state, {\n        errorMessage: action.payload,\n        isLoggedIn: action.isLoggedIn,\n        username: action.username\n      });\n\n    case AUTH_SIGNOUT:\n      return _objectSpread({}, state, {\n        isLoggedIn: action.isLoggedIn,\n        username: action.username\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/volleyball_chik_100/DigitalCrafts/Projects/IOT-Practice-2/gardenia2/client/src/reducers/auth.js"],"names":["AUTH_USER","AUTH_ERROR","AUTH_SIGNOUT","Initial_State","authenticated","errorMessage","isLoggedIn","username","zipcode","auth","state","action","console","log","payload","type"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,kBAApD;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,aAAa,EAAE,EADG;AAElBC,EAAAA,YAAY,EAAE,EAFI;AAGlBC,EAAAA,UAAU,EAAE,KAHM;AAIlBC,EAAAA,QAAQ,EAAE,EAJQ;AAKlBC,EAAAA,OAAO,EAAE;AALS,CAAtB;;AAQA,IAAIC,IAAI,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,MAAM,CAACG,OAAhC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,UAAnB;;AACA,UAAOK,MAAM,CAACI,IAAd;AACI,SAAKf,SAAL;AAEI,+BACOU,KADP;AAEIN,QAAAA,aAAa,EAAEO,MAAM,CAACG,OAF1B;AAGIR,QAAAA,UAAU,EAAEK,MAAM,CAACG,OAAP,CAAeR,UAH/B;AAIIC,QAAAA,QAAQ,EAAEI,MAAM,CAACG,OAAP,CAAeP,QAJ7B;AAKIC,QAAAA,OAAO,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAL5B;;AAQJ,SAAKP,UAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,YAAY,EAAEM,MAAM,CAACG,OAFzB;AAGIR,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAHvB;AAIIC,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAJrB;;AAMJ,SAAKL,YAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIC,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAHrB;;AAKJ;AACI,aAAOG,KAAP;AAzBR;AA2BH,CA9BD;;AAgCA,eAAeD,IAAf","sourcesContent":["import { AUTH_USER, AUTH_ERROR, AUTH_SIGNOUT } from '../actions/types';\n\nconst Initial_State = {\n    authenticated: \"\",\n    errorMessage: \"\",\n    isLoggedIn: false,\n    username: '',\n    zipcode: 0\n}\n\nlet auth = (state = Initial_State, action) => {\n    console.log('payloadddd',action.payload)\n    console.log(action.isLoggedIn)\n    switch(action.type){\n        case AUTH_USER:\n\n            return {\n                ...state,\n                authenticated: action.payload,\n                isLoggedIn: action.payload.isLoggedIn,\n                username: action.payload.username,\n                zipcode: action.payload.zipcode\n            }\n            \n        case AUTH_ERROR:\n            return  {\n                ...state,\n                errorMessage: action.payload,\n                isLoggedIn: action.isLoggedIn,\n                username: action.username\n            }\n        case AUTH_SIGNOUT:\n            return {\n                ...state,\n                isLoggedIn: action.isLoggedIn,\n                username: action.username\n            }\n        default:\n            return state;\n    }\n}\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}